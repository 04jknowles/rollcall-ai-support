{"ast":null,"code":"var _jsxFileName = \"/Users/rollcall/RollCallCode/rollcall-gpt-final/frontend/rollcall-gpt-react/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, Fragment } from \"react\";\nimport { useEffect } from \"react\";\nimport MessageLoader from \"./MessageLoader\";\nimport \"./Chat.css\";\nimport myImage from \"./rollcallscreen.png\";\nimport SuggestedMessages from \"./SuggestedMessages\";\nimport { FaBars, FaTimes } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  var _this = this;\n  const botMessageRef = useRef(null);\n  const socketRef = useRef(null);\n  const [wsConnection, setWsConnection] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [response, setResponse] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBot, setCurrentBot] = useState(\"Clippy\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [botMessageSize, setBotMessageSize] = useState({\n    width: 400,\n    height: 50\n  });\n  const [email, setEmail] = useState(\"john.doe@rollcall.com.au\");\n  const [subject, setSubject] = useState(\"\");\n  const [school, setSchool] = useState(\"St Johns Grammar\");\n  const [name, setName] = useState(\"John Doe\");\n  const [description, setDescription] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"General Question\");\n  const [phoneNumber, setPhoneNumber] = useState(\"0466987325\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [key, setKey] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    if (botMessageRef.current) {\n      const rect = botMessageRef.current.getBoundingClientRect();\n      setBotMessageSize({\n        width: rect.width,\n        height: rect.height\n      });\n    }\n  }, [messages]);\n\n  // Add this useEffect hook inside your component\n  useEffect(() => {\n    console.log(\"useEffect called\");\n    const initiateBot = async () => {\n      const response = await fetch(\"http://localhost:8000\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: \"\",\n          role: \"system\"\n        })\n      });\n      console.log(response);\n      const data = await response.json();\n      console.log(data);\n      setMessages([{\n        type: \"bot\",\n        content: data.message\n      }]);\n    };\n    initiateBot();\n\n    // Clean up function to remove previous conversations\n    return () => {\n      setMessages([]);\n    };\n  }, []);\n  const extractBotName = content => {\n    const botSwitchPattern = /\\[BOT_SWITCH: (.*?)\\]/;\n    const match = content.match(botSwitchPattern);\n    if (match) {\n      const botName = match[1];\n      const updatedContent = content.replace(botSwitchPattern, `Switching to ${botName}...`);\n      return {\n        botName,\n        updatedContent\n      };\n    }\n    return {\n      botName: null,\n      updatedContent: content\n    };\n  };\n  function extractImageUrl(text) {\n    const imageUrlPattern1 = /Image\\sURL:\\s(https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?)/i;\n    const imageUrlPattern2 = /https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?/i;\n    let match = text.match(imageUrlPattern1);\n    if (match) {\n      return match[1];\n    }\n    match = text.match(imageUrlPattern2);\n    return match ? match[0] : null;\n  }\n  const handleImageClick = imageUrl => {\n    setFullScreenImage(imageUrl);\n  };\n  const closeFullScreenImage = () => {\n    setFullScreenImage(null);\n  };\n  const renderForm = (updatedMessages, isSubmitted) => {\n    console.log(updatedMessages);\n    const userMessages = updatedMessages.filter(msg => msg.type === \"user\");\n    let mostRecentUserMessage = \"\";\n    let concatenatedMessages = \"\";\n    if (userMessages.length > 0) {\n      mostRecentUserMessage = userMessages[userMessages.length - 1].content;\n      concatenatedMessages = updatedMessages.map(msg => `${msg.type === \"user\" ? \"User: \" : \"Bot: \"}${msg.content}`).join(\"\\n\");\n    }\n\n    // Add the useEffect hook here\n    setSubject(mostRecentUserMessage);\n    setDescription(concatenatedMessages);\n    console.log(isSubmitted);\n    return !isSubmitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFreshDeskSubmit,\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#1D4A79\",\n          padding: \"16px\",\n          borderRadius: \"8px 8px 0 0\",\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: 0,\n            color: \"white\"\n          },\n          children: \"Submit a Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          padding: \"16px\",\n          borderRadius: \"0 0 8px 8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"school\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"School:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"school\",\n            value: school,\n            onChange: e => setSchool(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"subject\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"subject\",\n            value: subject || mostRecentUserMessage,\n            onChange: e => setSubject(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            value: description || concatenatedMessages,\n            onChange: e => setDescription(e.target.value),\n            required: true,\n            rows: \"5\",\n            style: {\n              width: \"100%\",\n              padding: \"12px 20px\",\n              boxSizing: \"border-box\",\n              border: \"2px solid #ccc\",\n              borderRadius: \"4px\",\n              resize: \"vertical\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              backgroundColor: \"#1D4A79\",\n              color: \"white\",\n              padding: \"15px 20px\",\n              borderRadius: \"8px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n              boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n              transition: \"all 0.3s ease\",\n              width: \"80%\"\n            },\n            onMouseEnter: e => {\n              e.target.style.backgroundColor = \"#16324F\";\n              e.target.style.transform = \"scale(1.05)\";\n            },\n            onMouseLeave: e => {\n              e.target.style.backgroundColor = \"#1D4A79\";\n              e.target.style.transform = \"scale(1)\";\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        padding: \"16px\",\n        borderRadius: \"8px\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for submitting a ticket to our support desk.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"One of our team will be in contact with you shortly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this);\n  };\n  const [socket, setSocket] = useState(null);\n  const [socketMessage, setSocketMessage] = useState(null);\n  useEffect(() => {\n    const connection = new WebSocket(\"ws://localhost:8000/ws/chat/\");\n    connection.onopen = () => {\n      console.log(\"Connected to ws://localhost:8000/ws/chat/\");\n      connection.send(JSON.stringify({\n        message: \"\",\n        role: \"system\"\n      }));\n    };\n    connection.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, {\n        type: \"bot\",\n        content: data.message\n      }]);\n    };\n    setWsConnection(connection);\n    return () => {\n      connection.close();\n      setMessages([]);\n    };\n  }, []);\n\n  // Listen for messages\n  useEffect(() => {\n    if (!socket) return;\n    socket.onmessage = event => {\n      console.log(\"Received:\", event.data);\n      setSocketMessage(event.data);\n    };\n    socket.onclose = event => {\n      console.log(\"WebSocket closed\", event);\n    };\n    socket.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n  }, [socket]);\n  const handleSubmit = async function (e) {\n    let msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (e) {\n      e.preventDefault();\n    }\n    const userMessage = msg || message;\n    setLoading(true);\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      content: userMessage\n    }]);\n    setMessage(\"\");\n\n    // Add a temporary bot message with the loading indicator\n    const temporaryBotMessage = {\n      type: \"bot\",\n      content: /*#__PURE__*/_jsxDEV(MessageLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 16\n      }, _this),\n      isTemporary: true\n    };\n    setMessages(prev => [...prev, temporaryBotMessage]);\n\n    // Use fetch to send a POST request\n    const response = await fetch(\"http://localhost:8000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: userMessage,\n        role: \"user\"\n      })\n    });\n    // const responseData = await response.text();\n\n    // Handle the server's response here. For example, you might add it to the chat history:\n    // setMessages((prev) => [...prev, { type: \"bot\", content: responseData }]);\n  };\n\n  useEffect(() => {\n    if (!wsConnection) return;\n    let tempMessage = null; // Variable to store the temporary message object\n\n    wsConnection.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n\n      // Check if the message indicates the end of the stream\n      let message;\n      try {\n        message = JSON.parse(data.message);\n      } catch (error) {\n        // If parsing throws an error, we assume it's not the stream_end message\n      }\n      if (message && message.stream_end) {\n        const imageUrl = extractImageUrl(tempMessage.content);\n        if (imageUrl) {\n          tempMessage.content = tempMessage.content.replace(imageUrl, \"\").trim();\n          setMessages(prev => [...prev, {\n            type: \"bot\",\n            content: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"RollCall\",\n              onClick: () => handleImageClick(imageUrl),\n              style: {\n                cursor: \"pointer\",\n                maxHeight: \"400px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)\n          }]);\n        }\n        tempMessage = null; // Reset tempMessage to start fresh for the next message\n        return;\n      }\n      const {\n        botName,\n        updatedContent\n      } = extractBotName(data.message);\n      if (botName) {\n        setCurrentBot(botName);\n      }\n      if (!tempMessage) {\n        // Create a new message object for the first onmessage\n        setLoading(false);\n        setMessages(prev => prev.filter(msg => !msg.isTemporary));\n        tempMessage = {\n          type: \"bot\",\n          content: updatedContent\n        };\n        setMessages(prev => [...prev, tempMessage]);\n      } else {\n        // Concatenate the updatedContent with the existing content in tempMessage\n        tempMessage.content += updatedContent;\n        setMessages(prev => [...prev]); // Trigger re-render\n      }\n\n      setLoading(false);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      wsConnection.close();\n    };\n  }, [wsConnection]);\n  const formatBotMessage = content => {\n    if (typeof content !== \"string\") {\n      return content;\n    }\n    const lines = content.split(\"\\n\");\n    let listItems = [];\n    const elements = [];\n    let isListing = false; // add a flag to determine if we're in a list or not\n\n    lines.forEach((line, index) => {\n      const match = line.match(/^(\\d+)\\.\\s(.*)$/);\n      if (match) {\n        const [,, text] = match;\n        listItems.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: text\n        }, `li-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 24\n        }, this));\n        isListing = true;\n      } else {\n        if (listItems.length > 0 && isListing) {\n          elements.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: listItems\n          }, `ul-${elements.length}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 25\n          }, this));\n          listItems = [];\n        }\n        elements.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: line\n        }, `p-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 23\n        }, this));\n        isListing = false;\n      }\n    });\n    if (listItems.length > 0) {\n      elements.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listItems\n      }, `ul-${elements.length}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 21\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 12\n    }, this);\n  };\n  const handleSuggestionClick = suggestion => {\n    handleSubmit(null, suggestion); // Pass the suggestion as the second argument\n  };\n\n  const handleFreshDeskSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const subjectValue = form.subject.value;\n    const descriptionValue = form.description.value;\n    console.log(messages);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/freshdesk/create-ticket`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          subject: subjectValue,\n          description: descriptionValue,\n          ticketType,\n          school,\n          // Add this field\n          phoneNumber // Add this field\n        })\n      });\n\n      const responseData = await response.json();\n      if (response.ok) {\n        console.log(\"Ticket created successfully:\", responseData);\n        setIsSubmitted(true);\n        setKey(prevKey => prevKey + 1); // Update the key value\n      } else {\n        console.error(\"Error creating ticket:\", responseData);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-screen\",\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: myImage,\n        alt: \"RollCallScreen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"2%\",\n          left: isOpen ? \"65%\" : \"97%\"\n        },\n        children: isOpen ? /*#__PURE__*/_jsxDEV(FaTimes, {\n          onClick: toggleMenu,\n          style: {\n            fontSize: \"1.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FaBars, {\n          onClick: toggleMenu,\n          style: {\n            fontSize: \"1.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [fullScreenImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-screen-image-container\",\n        onClick: closeFullScreenImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: fullScreenImage,\n          alt: \"full-screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-tabs\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            className: \"nav-tab\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://rollcall.com.au/wp-content/uploads/2018/08/cropped-RollCall-logo-sml-02.png\",\n            alt: \"Your Logo\",\n            style: {\n              width: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-wrapper ${msg.type === \"user\" ? \"user-message-wrapper\" : \"bot-message-wrapper\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${msg.type === \"user\" ? \"user-name\" : \"bot-name\"}`,\n            children: msg.type === \"user\" ? \"John\" : \"RollCall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: botMessageRef,\n            className: `message ${msg.type === \"user\" ? \"user-message\" : \"bot-message\"}`,\n            children: msg.type === \"user\" ? msg.content : msg.isLoading ? /*#__PURE__*/_jsxDEV(MessageLoader, {\n              width: botMessageSize.width,\n              height: botMessageSize.height,\n              botMessageSize: botMessageSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 19\n            }, this) : formatBotMessage(msg.content)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SuggestedMessages, {\n        onSuggestionClick: handleSuggestionClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          className: \"message-input\",\n          placeholder: \"Type your message...\",\n          onKeyDown: e => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              handleSubmit(e);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 24\n          }, this) : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-bubble\",\n          children: \"RollCall is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 547,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"QcYKlUia+bER4c8jTWYNvZLhSjM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","Fragment","useEffect","MessageLoader","myImage","SuggestedMessages","FaBars","FaTimes","jsxDEV","_jsxDEV","Home","_s","_this","botMessageRef","socketRef","wsConnection","setWsConnection","message","setMessage","fullScreenImage","setFullScreenImage","response","setResponse","messages","setMessages","loading","setLoading","currentBot","setCurrentBot","isTyping","setIsTyping","botMessageSize","setBotMessageSize","width","height","email","setEmail","subject","setSubject","school","setSchool","name","setName","description","setDescription","ticketType","setTicketType","phoneNumber","setPhoneNumber","isSubmitted","setIsSubmitted","key","setKey","isOpen","setIsOpen","toggleMenu","current","rect","getBoundingClientRect","console","log","initiateBot","fetch","method","headers","body","JSON","stringify","role","data","json","type","content","extractBotName","botSwitchPattern","match","botName","updatedContent","replace","extractImageUrl","text","imageUrlPattern1","imageUrlPattern2","handleImageClick","imageUrl","closeFullScreenImage","renderForm","updatedMessages","userMessages","filter","msg","mostRecentUserMessage","concatenatedMessages","length","map","join","onSubmit","handleFreshDeskSubmit","style","children","backgroundColor","padding","borderRadius","textAlign","margin","color","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","display","id","value","onChange","e","target","required","border","rows","boxSizing","resize","justifyContent","alignItems","marginTop","cursor","fontSize","fontWeight","boxShadow","transition","onMouseEnter","transform","onMouseLeave","socket","setSocket","socketMessage","setSocketMessage","connection","WebSocket","onopen","send","onmessage","event","parse","prevMessages","close","onclose","onerror","error","handleSubmit","arguments","undefined","preventDefault","userMessage","prev","temporaryBotMessage","isTemporary","tempMessage","stream_end","trim","src","alt","onClick","maxHeight","formatBotMessage","lines","split","listItems","elements","isListing","forEach","line","index","push","handleSuggestionClick","suggestion","form","subjectValue","descriptionValue","process","env","REACT_APP_BACKEND_URL","responseData","ok","prevKey","className","position","top","left","href","i","ref","isLoading","onSuggestionClick","placeholder","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["/Users/rollcall/RollCallCode/rollcall-gpt-final/frontend/rollcall-gpt-react/src/Home.js"],"sourcesContent":["import React, { useState, useRef, Fragment } from \"react\";\nimport { useEffect } from \"react\";\nimport MessageLoader from \"./MessageLoader\";\n\nimport \"./Chat.css\";\nimport myImage from \"./rollcallscreen.png\";\n\nimport SuggestedMessages from \"./SuggestedMessages\";\nimport { FaBars, FaTimes } from \"react-icons/fa\";\n\nfunction Home() {\n  const botMessageRef = useRef(null);\n  const socketRef = useRef(null);\n  const [wsConnection, setWsConnection] = useState(null);\n\n  const [message, setMessage] = useState(\"\");\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [response, setResponse] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBot, setCurrentBot] = useState(\"Clippy\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [botMessageSize, setBotMessageSize] = useState({\n    width: 400,\n    height: 50,\n  });\n  const [email, setEmail] = useState(\"john.doe@rollcall.com.au\");\n  const [subject, setSubject] = useState(\"\");\n  const [school, setSchool] = useState(\"St Johns Grammar\");\n  const [name, setName] = useState(\"John Doe\");\n  const [description, setDescription] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"General Question\");\n  const [phoneNumber, setPhoneNumber] = useState(\"0466987325\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [key, setKey] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  useEffect(() => {\n    if (botMessageRef.current) {\n      const rect = botMessageRef.current.getBoundingClientRect();\n      setBotMessageSize({ width: rect.width, height: rect.height });\n    }\n  }, [messages]);\n\n  // Add this useEffect hook inside your component\n  useEffect(() => {\n    console.log(\"useEffect called\");\n    const initiateBot = async () => {\n      const response = await fetch(\"http://localhost:8000\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ message: \"\", role: \"system\" }),\n      });\n\n      console.log(response);\n      const data = await response.json();\n      console.log(data);\n      setMessages([{ type: \"bot\", content: data.message }]);\n    };\n\n    initiateBot();\n\n    // Clean up function to remove previous conversations\n    return () => {\n      setMessages([]);\n    };\n  }, []);\n\n  const extractBotName = (content) => {\n    const botSwitchPattern = /\\[BOT_SWITCH: (.*?)\\]/;\n    const match = content.match(botSwitchPattern);\n\n    if (match) {\n      const botName = match[1];\n      const updatedContent = content.replace(\n        botSwitchPattern,\n        `Switching to ${botName}...`\n      );\n      return { botName, updatedContent };\n    }\n\n    return { botName: null, updatedContent: content };\n  };\n\n  function extractImageUrl(text) {\n    const imageUrlPattern1 =\n      /Image\\sURL:\\s(https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?)/i;\n    const imageUrlPattern2 =\n      /https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?/i;\n\n    let match = text.match(imageUrlPattern1);\n    if (match) {\n      return match[1];\n    }\n\n    match = text.match(imageUrlPattern2);\n    return match ? match[0] : null;\n  }\n\n  const handleImageClick = (imageUrl) => {\n    setFullScreenImage(imageUrl);\n  };\n\n  const closeFullScreenImage = () => {\n    setFullScreenImage(null);\n  };\n\n  const renderForm = (updatedMessages, isSubmitted) => {\n    console.log(updatedMessages);\n    const userMessages = updatedMessages.filter((msg) => msg.type === \"user\");\n\n    let mostRecentUserMessage = \"\";\n    let concatenatedMessages = \"\";\n\n    if (userMessages.length > 0) {\n      mostRecentUserMessage = userMessages[userMessages.length - 1].content;\n      concatenatedMessages = updatedMessages\n        .map(\n          (msg) => `${msg.type === \"user\" ? \"User: \" : \"Bot: \"}${msg.content}`\n        )\n        .join(\"\\n\");\n    }\n\n    // Add the useEffect hook here\n    setSubject(mostRecentUserMessage);\n    setDescription(concatenatedMessages);\n\n    console.log(isSubmitted);\n\n    return !isSubmitted ? (\n      <form\n        onSubmit={handleFreshDeskSubmit}\n        key={key}\n        style={{ width: \"100%\" }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#1D4A79\",\n            padding: \"16px\",\n            borderRadius: \"8px 8px 0 0\",\n            textAlign: \"center\",\n          }}\n        >\n          <h2 style={{ margin: 0, color: \"white\" }}>Submit a Ticket</h2>\n        </div>\n        <div\n          style={{\n            backgroundColor: \"white\",\n            padding: \"16px\",\n            borderRadius: \"0 0 8px 8px\",\n          }}\n        >\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"name\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Name:\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"email\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"school\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              School:\n            </label>\n            <input\n              type=\"text\"\n              id=\"school\"\n              value={school}\n              onChange={(e) => setSchool(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"subject\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Subject:\n            </label>\n            <input\n              type=\"text\"\n              id=\"subject\"\n              value={subject || mostRecentUserMessage}\n              onChange={(e) => setSubject(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"description\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Description:\n            </label>\n            <textarea\n              id=\"description\"\n              value={description || concatenatedMessages}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              rows=\"5\"\n              style={{\n                width: \"100%\",\n                padding: \"12px 20px\",\n                boxSizing: \"border-box\",\n                border: \"2px solid #ccc\",\n                borderRadius: \"4px\",\n                resize: \"vertical\",\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginTop: \"20px\",\n            }}\n          >\n            <button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#1D4A79\",\n                color: \"white\",\n                padding: \"15px 20px\",\n                borderRadius: \"8px\",\n                border: \"none\",\n                cursor: \"pointer\",\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n                transition: \"all 0.3s ease\",\n                width: \"80%\",\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.backgroundColor = \"#16324F\";\n                e.target.style.transform = \"scale(1.05)\";\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.backgroundColor = \"#1D4A79\";\n                e.target.style.transform = \"scale(1)\";\n              }}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </form>\n    ) : (\n      <div\n        style={{\n          backgroundColor: \"white\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          textAlign: \"center\",\n        }}\n      >\n        <h2>Thank you for submitting a ticket to our support desk.</h2>\n        <p>One of our team will be in contact with you shortly.</p>\n      </div>\n    );\n  };\n\n  const [socket, setSocket] = useState(null);\n  const [socketMessage, setSocketMessage] = useState(null);\n\n  useEffect(() => {\n    const connection = new WebSocket(\"ws://localhost:8000/ws/chat/\");\n\n    connection.onopen = () => {\n      console.log(\"Connected to ws://localhost:8000/ws/chat/\");\n      connection.send(JSON.stringify({ message: \"\", role: \"system\" }));\n    };\n\n    connection.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { type: \"bot\", content: data.message },\n      ]);\n    };\n\n    setWsConnection(connection);\n\n    return () => {\n      connection.close();\n      setMessages([]);\n    };\n  }, []);\n\n  // Listen for messages\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.onmessage = (event) => {\n      console.log(\"Received:\", event.data);\n      setSocketMessage(event.data);\n    };\n\n    socket.onclose = (event) => {\n      console.log(\"WebSocket closed\", event);\n    };\n\n    socket.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n    };\n  }, [socket]);\n\n  const handleSubmit = async (e, msg = null) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    const userMessage = msg || message;\n    setLoading(true);\n    setMessages((prev) => [...prev, { type: \"user\", content: userMessage }]);\n    setMessage(\"\");\n\n    // Add a temporary bot message with the loading indicator\n    const temporaryBotMessage = {\n      type: \"bot\",\n      content: <MessageLoader />,\n      isTemporary: true,\n    };\n    setMessages((prev) => [...prev, temporaryBotMessage]);\n\n    // Use fetch to send a POST request\n    const response = await fetch(\"http://localhost:8000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        message: userMessage,\n        role: \"user\",\n      }),\n    });\n    // const responseData = await response.text();\n\n    // Handle the server's response here. For example, you might add it to the chat history:\n    // setMessages((prev) => [...prev, { type: \"bot\", content: responseData }]);\n  };\n  useEffect(() => {\n    if (!wsConnection) return;\n\n    let tempMessage = null; // Variable to store the temporary message object\n\n    wsConnection.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n\n      // Check if the message indicates the end of the stream\n      let message;\n      try {\n        message = JSON.parse(data.message);\n      } catch (error) {\n        // If parsing throws an error, we assume it's not the stream_end message\n      }\n\n      if (message && message.stream_end) {\n        const imageUrl = extractImageUrl(tempMessage.content);\n        if (imageUrl) {\n          tempMessage.content = tempMessage.content\n            .replace(imageUrl, \"\")\n            .trim();\n          setMessages((prev) => [\n            ...prev,\n            {\n              type: \"bot\",\n              content: (\n                <img\n                  src={imageUrl}\n                  alt=\"RollCall\"\n                  onClick={() => handleImageClick(imageUrl)}\n                  style={{ cursor: \"pointer\", maxHeight: \"400px\" }}\n                />\n              ),\n            },\n          ]);\n        }\n        tempMessage = null; // Reset tempMessage to start fresh for the next message\n        return;\n      }\n\n      const { botName, updatedContent } = extractBotName(data.message);\n\n      if (botName) {\n        setCurrentBot(botName);\n      }\n\n      if (!tempMessage) {\n        // Create a new message object for the first onmessage\n        setLoading(false);\n        setMessages((prev) => prev.filter((msg) => !msg.isTemporary));\n\n        tempMessage = { type: \"bot\", content: updatedContent };\n        setMessages((prev) => [...prev, tempMessage]);\n      } else {\n        // Concatenate the updatedContent with the existing content in tempMessage\n        tempMessage.content += updatedContent;\n        setMessages((prev) => [...prev]); // Trigger re-render\n      }\n\n      setLoading(false);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      wsConnection.close();\n    };\n  }, [wsConnection]);\n\n  const formatBotMessage = (content) => {\n    if (typeof content !== \"string\") {\n      return content;\n    }\n\n    const lines = content.split(\"\\n\");\n    let listItems = [];\n    const elements = [];\n    let isListing = false; // add a flag to determine if we're in a list or not\n\n    lines.forEach((line, index) => {\n      const match = line.match(/^(\\d+)\\.\\s(.*)$/);\n\n      if (match) {\n        const [, , text] = match;\n        listItems.push(<li key={`li-${index}`}>{text}</li>);\n        isListing = true;\n      } else {\n        if (listItems.length > 0 && isListing) {\n          elements.push(<ul key={`ul-${elements.length}`}>{listItems}</ul>);\n          listItems = [];\n        }\n        elements.push(<p key={`p-${index}`}>{line}</p>);\n        isListing = false;\n      }\n    });\n\n    if (listItems.length > 0) {\n      elements.push(<ul key={`ul-${elements.length}`}>{listItems}</ul>);\n    }\n\n    return <div>{elements}</div>;\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    handleSubmit(null, suggestion); // Pass the suggestion as the second argument\n  };\n\n  const handleFreshDeskSubmit = async (e) => {\n    e.preventDefault();\n\n    const form = e.target;\n    const subjectValue = form.subject.value;\n    const descriptionValue = form.description.value;\n\n    console.log(messages);\n\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/freshdesk/create-ticket`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email,\n            subject: subjectValue,\n            description: descriptionValue,\n            ticketType,\n            school, // Add this field\n            phoneNumber, // Add this field\n          }),\n        }\n      );\n\n      const responseData = await response.json();\n\n      if (response.ok) {\n        console.log(\"Ticket created successfully:\", responseData);\n        setIsSubmitted(true);\n        setKey((prevKey) => prevKey + 1); // Update the key value\n      } else {\n        console.error(\"Error creating ticket:\", responseData);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <div className=\"flex-container\">\n      <div className=\"main-screen\" style={{ width: \"100%\" }}>\n        <img src={myImage} alt=\"RollCallScreen\" />\n\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"2%\",\n            left: isOpen ? \"65%\" : \"97%\",\n          }}\n        >\n          {isOpen ? (\n            <FaTimes onClick={toggleMenu} style={{ fontSize: \"1.5rem\" }} />\n          ) : (\n            <FaBars onClick={toggleMenu} style={{ fontSize: \"1.5rem\" }} />\n          )}\n        </div>\n      </div>\n      <div className=\"chat-container\">\n        {fullScreenImage && (\n          <div\n            className=\"full-screen-image-container\"\n            onClick={closeFullScreenImage}\n          >\n            <img src={fullScreenImage} alt=\"full-screen\" />\n          </div>\n        )}\n        <nav className=\"navbar\">\n          <div className=\"nav-tabs\">\n            <a href=\"/\" className=\"nav-tab\">\n              Home\n            </a>\n          </div>\n          <a href=\"/\" className=\"logo\">\n            <img\n              src=\"https://rollcall.com.au/wp-content/uploads/2018/08/cropped-RollCall-logo-sml-02.png\"\n              alt=\"Your Logo\"\n              style={{ width: \"100px\" }}\n            />\n          </a>\n        </nav>\n        <div className=\"chat-window\">\n          {messages.map((msg, i) => (\n            <div\n              key={i}\n              className={`message-wrapper ${\n                msg.type === \"user\"\n                  ? \"user-message-wrapper\"\n                  : \"bot-message-wrapper\"\n              }`}\n            >\n              <div\n                className={`${msg.type === \"user\" ? \"user-name\" : \"bot-name\"}`}\n              >\n                {msg.type === \"user\" ? \"John\" : \"RollCall\"}\n              </div>\n              <div\n                ref={botMessageRef}\n                className={`message ${\n                  msg.type === \"user\" ? \"user-message\" : \"bot-message\"\n                }`}\n              >\n                {msg.type === \"user\" ? (\n                  msg.content\n                ) : msg.isLoading ? (\n                  <MessageLoader\n                    width={botMessageSize.width}\n                    height={botMessageSize.height}\n                    botMessageSize={botMessageSize}\n                  />\n                ) : (\n                  formatBotMessage(msg.content)\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n        <SuggestedMessages onSuggestionClick={handleSuggestionClick} />\n\n        <form onSubmit={handleSubmit} className=\"form-container\">\n          <textarea\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            className=\"message-input\"\n            placeholder=\"Type your message...\"\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                e.preventDefault();\n                handleSubmit(e);\n              }\n            }}\n          ></textarea>\n          <button type=\"submit\" className=\"submit-button\" disabled={loading}>\n            {loading ? <div className=\"loader\"></div> : \"Send\"}\n          </button>\n          {loading && (\n            <div className=\"typing-bubble\">RollCall is typing...</div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}