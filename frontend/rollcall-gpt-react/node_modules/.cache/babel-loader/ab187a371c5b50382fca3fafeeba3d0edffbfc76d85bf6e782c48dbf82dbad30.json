{"ast":null,"code":"var _jsxFileName = \"/Users/rollcall/RollCallCode/rollcall-gpt-final/frontend/rollcall-gpt-react/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport MessageLoader from \"./MessageLoader\";\nimport \"./Chat.css\";\nimport SuggestedMessages from \"./SuggestedMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  var _this = this;\n  const botMessageRef = useRef(null);\n  const socketRef = useRef(null);\n  const [wsConnection, setWsConnection] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [response, setResponse] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBot, setCurrentBot] = useState(\"Clippy\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [botMessageSize, setBotMessageSize] = useState({\n    width: 400,\n    height: 50\n  });\n  const [email, setEmail] = useState(\"john.doe@rollcall.com.au\");\n  const [subject, setSubject] = useState(\"\");\n  const [school, setSchool] = useState(\"St Johns Grammar\");\n  const [name, setName] = useState(\"John Doe\");\n  const [description, setDescription] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"General Question\");\n  const [phoneNumber, setPhoneNumber] = useState(\"0466987325\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [key, setKey] = useState(0);\n  useEffect(() => {\n    if (botMessageRef.current) {\n      const rect = botMessageRef.current.getBoundingClientRect();\n      setBotMessageSize({\n        width: rect.width,\n        height: rect.height\n      });\n    }\n  }, [messages]);\n  const extractBotName = content => {\n    const botSwitchPattern = /\\[BOT_SWITCH: (.*?)\\]/;\n    const match = content.match(botSwitchPattern);\n    if (match) {\n      const botName = match[1];\n      const updatedContent = content.replace(botSwitchPattern, `Switching to ${botName}...`);\n      return {\n        botName,\n        updatedContent\n      };\n    }\n    return {\n      botName: null,\n      updatedContent: content\n    };\n  };\n  function extractImageUrl(text) {\n    const imageUrlPattern1 = /Image\\sURL:\\s(https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?)/i;\n    const imageUrlPattern2 = /https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?/i;\n    let match = text.match(imageUrlPattern1);\n    if (match) {\n      return match[1];\n    }\n    match = text.match(imageUrlPattern2);\n    return match ? match[0] : null;\n  }\n  const handleImageClick = imageUrl => {\n    setFullScreenImage(imageUrl);\n  };\n  const closeFullScreenImage = () => {\n    setFullScreenImage(null);\n  };\n  const renderForm = (updatedMessages, isSubmitted) => {\n    console.log(updatedMessages);\n    const userMessages = updatedMessages.filter(msg => msg.type === \"user\");\n    let mostRecentUserMessage = \"\";\n    let concatenatedMessages = \"\";\n    if (userMessages.length > 0) {\n      mostRecentUserMessage = userMessages[userMessages.length - 1].content;\n      concatenatedMessages = updatedMessages.map(msg => `${msg.type === \"user\" ? \"User: \" : \"Bot: \"}${msg.content}`).join(\"\\n\");\n    }\n\n    // Add the useEffect hook here\n    setSubject(mostRecentUserMessage);\n    setDescription(concatenatedMessages);\n    console.log(isSubmitted);\n    return !isSubmitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFreshDeskSubmit,\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#1D4A79\",\n          padding: \"16px\",\n          borderRadius: \"8px 8px 0 0\",\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: 0,\n            color: \"white\"\n          },\n          children: \"Submit a Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          padding: \"16px\",\n          borderRadius: \"0 0 8px 8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"school\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"School:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"school\",\n            value: school,\n            onChange: e => setSchool(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"subject\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"subject\",\n            value: subject || mostRecentUserMessage,\n            onChange: e => setSubject(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            value: description || concatenatedMessages,\n            onChange: e => setDescription(e.target.value),\n            required: true,\n            rows: \"5\",\n            style: {\n              width: \"100%\",\n              padding: \"12px 20px\",\n              boxSizing: \"border-box\",\n              border: \"2px solid #ccc\",\n              borderRadius: \"4px\",\n              resize: \"vertical\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              backgroundColor: \"#1D4A79\",\n              color: \"white\",\n              padding: \"15px 20px\",\n              borderRadius: \"8px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n              boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n              transition: \"all 0.3s ease\",\n              width: \"80%\"\n            },\n            onMouseEnter: e => {\n              e.target.style.backgroundColor = \"#16324F\";\n              e.target.style.transform = \"scale(1.05)\";\n            },\n            onMouseLeave: e => {\n              e.target.style.backgroundColor = \"#1D4A79\";\n              e.target.style.transform = \"scale(1)\";\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        padding: \"16px\",\n        borderRadius: \"8px\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for submitting a ticket to our support desk.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"One of our team will be in contact with you shortly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  };\n  const [socket, setSocket] = useState(null);\n  const [socketMessage, setSocketMessage] = useState(null);\n  useEffect(() => {\n    const connection = new WebSocket(\"ws://localhost:8000/ws/chat/\");\n    connection.onopen = () => {\n      console.log(\"Connected to ws://localhost:8000/ws/chat/\");\n      connection.send(JSON.stringify({\n        message: \"\",\n        role: \"system\"\n      }));\n    };\n    connection.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, {\n        type: \"bot\",\n        content: data.message\n      }]);\n    };\n    setWsConnection(connection);\n    return () => {\n      connection.close();\n      setMessages([]);\n    };\n  }, []);\n\n  // Listen for messages\n  useEffect(() => {\n    if (!socket) return;\n    socket.onmessage = event => {\n      console.log(\"Received:\", event.data);\n      setSocketMessage(event.data);\n    };\n    socket.onclose = event => {\n      console.log(\"WebSocket closed\", event);\n    };\n    socket.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n  }, [socket]);\n  const handleSubmit = async function (e) {\n    let msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (e) {\n      e.preventDefault();\n    }\n    const userMessage = msg || message;\n    setLoading(true);\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      content: userMessage\n    }]);\n    setMessage(\"\");\n\n    // Add a temporary bot message with the loading indicator\n    const temporaryBotMessage = {\n      type: \"bot\",\n      content: /*#__PURE__*/_jsxDEV(MessageLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 16\n      }, _this),\n      isTemporary: true\n    };\n    setMessages(prev => [...prev, temporaryBotMessage]);\n\n    // Use fetch to send a POST request\n    const response = await fetch(\"http://localhost:8000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: userMessage,\n        role: \"user\"\n      })\n    });\n    // const responseData = await response.text();\n\n    // Handle the server's response here. For example, you might add it to the chat history:\n    // setMessages((prev) => [...prev, { type: \"bot\", content: responseData }]);\n  };\n\n  useEffect(() => {\n    if (!wsConnection) return;\n    let tempMessage = null; // Variable to store the temporary message object\n\n    wsConnection.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n\n      // Check if the message indicates the end of the stream\n      let message;\n      try {\n        message = JSON.parse(data.message);\n      } catch (error) {\n        // If parsing throws an error, we assume it's not the stream_end message\n      }\n      if (message && message.stream_end) {\n        const imageUrl = extractImageUrl(tempMessage.content);\n        if (imageUrl) {\n          tempMessage.content = tempMessage.content.replace(imageUrl, \"\").trim();\n          setMessages(prev => [...prev, {\n            type: \"bot\",\n            content: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"RollCall\",\n              onClick: () => handleImageClick(imageUrl),\n              style: {\n                cursor: \"pointer\",\n                maxHeight: \"400px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this)\n          }]);\n        }\n        tempMessage = null; // Reset tempMessage to start fresh for the next message\n        return;\n      }\n      const {\n        botName,\n        updatedContent\n      } = extractBotName(data.message);\n      if (botName) {\n        setCurrentBot(botName);\n      }\n      if (!tempMessage) {\n        // Create a new message object for the first onmessage\n        setLoading(false);\n        setMessages(prev => prev.filter(msg => !msg.isTemporary));\n        tempMessage = {\n          type: \"bot\",\n          content: updatedContent\n        };\n        setMessages(prev => [...prev, tempMessage]);\n      } else {\n        // Concatenate the updatedContent with the existing content in tempMessage\n        tempMessage.content += updatedContent;\n        setMessages(prev => [...prev]); // Trigger re-render\n      }\n\n      setLoading(false);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      wsConnection.close();\n    };\n  }, [wsConnection]);\n  const formatBotMessage = content => {\n    if (typeof content !== \"string\") {\n      return content;\n    }\n    const lines = content.split(\"\\n\");\n    let listItems = [];\n    const elements = [];\n    let isListing = false; // add a flag to determine if we're in a list or not\n\n    lines.forEach((line, index) => {\n      const match = line.match(/^(\\d+)\\.\\s(.*)$/);\n      if (match) {\n        const [,, text] = match;\n        listItems.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: text\n        }, `li-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 24\n        }, this));\n        isListing = true;\n      } else {\n        if (listItems.length > 0 && isListing) {\n          elements.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: listItems\n          }, `ul-${elements.length}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }, this));\n          listItems = [];\n        }\n        elements.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: line\n        }, `p-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 23\n        }, this));\n        isListing = false;\n      }\n    });\n    if (listItems.length > 0) {\n      elements.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listItems\n      }, `ul-${elements.length}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 21\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 12\n    }, this);\n  };\n  const handleSuggestionClick = suggestion => {\n    handleSubmit(null, suggestion); // Pass the suggestion as the second argument\n  };\n\n  const handleFreshDeskSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const subjectValue = form.subject.value;\n    const descriptionValue = form.description.value;\n    console.log(messages);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/freshdesk/create-ticket`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          subject: subjectValue,\n          description: descriptionValue,\n          ticketType,\n          school,\n          // Add this field\n          phoneNumber // Add this field\n        })\n      });\n\n      const responseData = await response.json();\n      if (response.ok) {\n        console.log(\"Ticket created successfully:\", responseData);\n        setIsSubmitted(true);\n        setKey(prevKey => prevKey + 1); // Update the key value\n      } else {\n        console.error(\"Error creating ticket:\", responseData);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [fullScreenImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-screen-image-container\",\n      onClick: closeFullScreenImage,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: fullScreenImage,\n        alt: \"full-screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-tabs\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"nav-tab\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://rollcall.com.au/wp-content/uploads/2018/08/cropped-RollCall-logo-sml-02.png\",\n          alt: \"Your Logo\",\n          style: {\n            width: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-wrapper ${msg.type === \"user\" ? \"user-message-wrapper\" : \"bot-message-wrapper\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${msg.type === \"user\" ? \"user-name\" : \"bot-name\"}`,\n          children: msg.type === \"user\" ? \"John\" : \"RollCall\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: botMessageRef,\n          className: `message ${msg.type === \"user\" ? \"user-message\" : \"bot-message\"}`,\n          children: msg.type === \"user\" ? msg.content : msg.isLoading ? /*#__PURE__*/_jsxDEV(MessageLoader, {\n            width: botMessageSize.width,\n            height: botMessageSize.height,\n            botMessageSize: botMessageSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 17\n          }, this) : formatBotMessage(msg.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuggestedMessages, {\n      onSuggestionClick: handleSuggestionClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        className: \"message-input\",\n        placeholder: \"Type your message...\",\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            handleSubmit(e);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 22\n        }, this) : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-bubble\",\n        children: \"RollCall is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 513,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"cV6UM7n2D480qDhTBwMA/ok//zM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MessageLoader","SuggestedMessages","jsxDEV","_jsxDEV","Home","_s","_this","botMessageRef","socketRef","wsConnection","setWsConnection","message","setMessage","fullScreenImage","setFullScreenImage","response","setResponse","messages","setMessages","loading","setLoading","currentBot","setCurrentBot","isTyping","setIsTyping","botMessageSize","setBotMessageSize","width","height","email","setEmail","subject","setSubject","school","setSchool","name","setName","description","setDescription","ticketType","setTicketType","phoneNumber","setPhoneNumber","isSubmitted","setIsSubmitted","key","setKey","current","rect","getBoundingClientRect","extractBotName","content","botSwitchPattern","match","botName","updatedContent","replace","extractImageUrl","text","imageUrlPattern1","imageUrlPattern2","handleImageClick","imageUrl","closeFullScreenImage","renderForm","updatedMessages","console","log","userMessages","filter","msg","type","mostRecentUserMessage","concatenatedMessages","length","map","join","onSubmit","handleFreshDeskSubmit","style","children","backgroundColor","padding","borderRadius","textAlign","margin","color","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","display","id","value","onChange","e","target","required","border","rows","boxSizing","resize","justifyContent","alignItems","marginTop","cursor","fontSize","fontWeight","boxShadow","transition","onMouseEnter","transform","onMouseLeave","socket","setSocket","socketMessage","setSocketMessage","connection","WebSocket","onopen","send","JSON","stringify","role","onmessage","event","data","parse","prevMessages","close","onclose","onerror","error","handleSubmit","arguments","undefined","preventDefault","userMessage","prev","temporaryBotMessage","isTemporary","fetch","method","headers","body","tempMessage","stream_end","trim","src","alt","onClick","maxHeight","formatBotMessage","lines","split","listItems","elements","isListing","forEach","line","index","push","handleSuggestionClick","suggestion","form","subjectValue","descriptionValue","process","env","REACT_APP_BACKEND_URL","responseData","json","ok","prevKey","className","href","i","ref","isLoading","onSuggestionClick","placeholder","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["/Users/rollcall/RollCallCode/rollcall-gpt-final/frontend/rollcall-gpt-react/src/Home.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport MessageLoader from \"./MessageLoader\";\n\nimport \"./Chat.css\";\nimport SuggestedMessages from \"./SuggestedMessages\";\n\nfunction Home() {\n  const botMessageRef = useRef(null);\n  const socketRef = useRef(null);\n  const [wsConnection, setWsConnection] = useState(null);\n\n  const [message, setMessage] = useState(\"\");\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [response, setResponse] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBot, setCurrentBot] = useState(\"Clippy\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [botMessageSize, setBotMessageSize] = useState({\n    width: 400,\n    height: 50,\n  });\n  const [email, setEmail] = useState(\"john.doe@rollcall.com.au\");\n  const [subject, setSubject] = useState(\"\");\n  const [school, setSchool] = useState(\"St Johns Grammar\");\n  const [name, setName] = useState(\"John Doe\");\n  const [description, setDescription] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"General Question\");\n  const [phoneNumber, setPhoneNumber] = useState(\"0466987325\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [key, setKey] = useState(0);\n\n  useEffect(() => {\n    if (botMessageRef.current) {\n      const rect = botMessageRef.current.getBoundingClientRect();\n      setBotMessageSize({ width: rect.width, height: rect.height });\n    }\n  }, [messages]);\n\n  const extractBotName = (content) => {\n    const botSwitchPattern = /\\[BOT_SWITCH: (.*?)\\]/;\n    const match = content.match(botSwitchPattern);\n\n    if (match) {\n      const botName = match[1];\n      const updatedContent = content.replace(\n        botSwitchPattern,\n        `Switching to ${botName}...`\n      );\n      return { botName, updatedContent };\n    }\n\n    return { botName: null, updatedContent: content };\n  };\n\n  function extractImageUrl(text) {\n    const imageUrlPattern1 =\n      /Image\\sURL:\\s(https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?)/i;\n    const imageUrlPattern2 =\n      /https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?/i;\n\n    let match = text.match(imageUrlPattern1);\n    if (match) {\n      return match[1];\n    }\n\n    match = text.match(imageUrlPattern2);\n    return match ? match[0] : null;\n  }\n\n  const handleImageClick = (imageUrl) => {\n    setFullScreenImage(imageUrl);\n  };\n\n  const closeFullScreenImage = () => {\n    setFullScreenImage(null);\n  };\n\n  const renderForm = (updatedMessages, isSubmitted) => {\n    console.log(updatedMessages);\n    const userMessages = updatedMessages.filter((msg) => msg.type === \"user\");\n\n    let mostRecentUserMessage = \"\";\n    let concatenatedMessages = \"\";\n\n    if (userMessages.length > 0) {\n      mostRecentUserMessage = userMessages[userMessages.length - 1].content;\n      concatenatedMessages = updatedMessages\n        .map(\n          (msg) => `${msg.type === \"user\" ? \"User: \" : \"Bot: \"}${msg.content}`\n        )\n        .join(\"\\n\");\n    }\n\n    // Add the useEffect hook here\n    setSubject(mostRecentUserMessage);\n    setDescription(concatenatedMessages);\n\n    console.log(isSubmitted);\n\n    return !isSubmitted ? (\n      <form\n        onSubmit={handleFreshDeskSubmit}\n        key={key}\n        style={{ width: \"100%\" }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#1D4A79\",\n            padding: \"16px\",\n            borderRadius: \"8px 8px 0 0\",\n            textAlign: \"center\",\n          }}\n        >\n          <h2 style={{ margin: 0, color: \"white\" }}>Submit a Ticket</h2>\n        </div>\n        <div\n          style={{\n            backgroundColor: \"white\",\n            padding: \"16px\",\n            borderRadius: \"0 0 8px 8px\",\n          }}\n        >\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"name\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Name:\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"email\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"school\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              School:\n            </label>\n            <input\n              type=\"text\"\n              id=\"school\"\n              value={school}\n              onChange={(e) => setSchool(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"subject\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Subject:\n            </label>\n            <input\n              type=\"text\"\n              id=\"subject\"\n              value={subject || mostRecentUserMessage}\n              onChange={(e) => setSubject(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"description\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Description:\n            </label>\n            <textarea\n              id=\"description\"\n              value={description || concatenatedMessages}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              rows=\"5\"\n              style={{\n                width: \"100%\",\n                padding: \"12px 20px\",\n                boxSizing: \"border-box\",\n                border: \"2px solid #ccc\",\n                borderRadius: \"4px\",\n                resize: \"vertical\",\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginTop: \"20px\",\n            }}\n          >\n            <button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#1D4A79\",\n                color: \"white\",\n                padding: \"15px 20px\",\n                borderRadius: \"8px\",\n                border: \"none\",\n                cursor: \"pointer\",\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n                transition: \"all 0.3s ease\",\n                width: \"80%\",\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.backgroundColor = \"#16324F\";\n                e.target.style.transform = \"scale(1.05)\";\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.backgroundColor = \"#1D4A79\";\n                e.target.style.transform = \"scale(1)\";\n              }}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </form>\n    ) : (\n      <div\n        style={{\n          backgroundColor: \"white\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          textAlign: \"center\",\n        }}\n      >\n        <h2>Thank you for submitting a ticket to our support desk.</h2>\n        <p>One of our team will be in contact with you shortly.</p>\n      </div>\n    );\n  };\n\n  const [socket, setSocket] = useState(null);\n  const [socketMessage, setSocketMessage] = useState(null);\n\n  useEffect(() => {\n    const connection = new WebSocket(\"ws://localhost:8000/ws/chat/\");\n\n    connection.onopen = () => {\n      console.log(\"Connected to ws://localhost:8000/ws/chat/\");\n      connection.send(JSON.stringify({ message: \"\", role: \"system\" }));\n    };\n\n    connection.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { type: \"bot\", content: data.message },\n      ]);\n    };\n\n    setWsConnection(connection);\n\n    return () => {\n      connection.close();\n      setMessages([]);\n    };\n  }, []);\n\n  // Listen for messages\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.onmessage = (event) => {\n      console.log(\"Received:\", event.data);\n      setSocketMessage(event.data);\n    };\n\n    socket.onclose = (event) => {\n      console.log(\"WebSocket closed\", event);\n    };\n\n    socket.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n    };\n  }, [socket]);\n\n  const handleSubmit = async (e, msg = null) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    const userMessage = msg || message;\n    setLoading(true);\n    setMessages((prev) => [...prev, { type: \"user\", content: userMessage }]);\n    setMessage(\"\");\n\n    // Add a temporary bot message with the loading indicator\n    const temporaryBotMessage = {\n      type: \"bot\",\n      content: <MessageLoader />,\n      isTemporary: true,\n    };\n    setMessages((prev) => [...prev, temporaryBotMessage]);\n\n    // Use fetch to send a POST request\n    const response = await fetch(\"http://localhost:8000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        message: userMessage,\n        role: \"user\",\n      }),\n    });\n    // const responseData = await response.text();\n\n    // Handle the server's response here. For example, you might add it to the chat history:\n    // setMessages((prev) => [...prev, { type: \"bot\", content: responseData }]);\n  };\n  useEffect(() => {\n    if (!wsConnection) return;\n\n    let tempMessage = null; // Variable to store the temporary message object\n\n    wsConnection.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n\n      // Check if the message indicates the end of the stream\n      let message;\n      try {\n        message = JSON.parse(data.message);\n      } catch (error) {\n        // If parsing throws an error, we assume it's not the stream_end message\n      }\n\n      if (message && message.stream_end) {\n        const imageUrl = extractImageUrl(tempMessage.content);\n        if (imageUrl) {\n          tempMessage.content = tempMessage.content\n            .replace(imageUrl, \"\")\n            .trim();\n          setMessages((prev) => [\n            ...prev,\n            {\n              type: \"bot\",\n              content: (\n                <img\n                  src={imageUrl}\n                  alt=\"RollCall\"\n                  onClick={() => handleImageClick(imageUrl)}\n                  style={{ cursor: \"pointer\", maxHeight: \"400px\" }}\n                />\n              ),\n            },\n          ]);\n        }\n        tempMessage = null; // Reset tempMessage to start fresh for the next message\n        return;\n      }\n\n      const { botName, updatedContent } = extractBotName(data.message);\n\n      if (botName) {\n        setCurrentBot(botName);\n      }\n\n      if (!tempMessage) {\n        // Create a new message object for the first onmessage\n        setLoading(false);\n        setMessages((prev) => prev.filter((msg) => !msg.isTemporary));\n\n        tempMessage = { type: \"bot\", content: updatedContent };\n        setMessages((prev) => [...prev, tempMessage]);\n      } else {\n        // Concatenate the updatedContent with the existing content in tempMessage\n        tempMessage.content += updatedContent;\n        setMessages((prev) => [...prev]); // Trigger re-render\n      }\n\n      setLoading(false);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      wsConnection.close();\n    };\n  }, [wsConnection]);\n\n  const formatBotMessage = (content) => {\n    if (typeof content !== \"string\") {\n      return content;\n    }\n\n    const lines = content.split(\"\\n\");\n    let listItems = [];\n    const elements = [];\n    let isListing = false; // add a flag to determine if we're in a list or not\n\n    lines.forEach((line, index) => {\n      const match = line.match(/^(\\d+)\\.\\s(.*)$/);\n\n      if (match) {\n        const [, , text] = match;\n        listItems.push(<li key={`li-${index}`}>{text}</li>);\n        isListing = true;\n      } else {\n        if (listItems.length > 0 && isListing) {\n          elements.push(<ul key={`ul-${elements.length}`}>{listItems}</ul>);\n          listItems = [];\n        }\n        elements.push(<p key={`p-${index}`}>{line}</p>);\n        isListing = false;\n      }\n    });\n\n    if (listItems.length > 0) {\n      elements.push(<ul key={`ul-${elements.length}`}>{listItems}</ul>);\n    }\n\n    return <div>{elements}</div>;\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    handleSubmit(null, suggestion); // Pass the suggestion as the second argument\n  };\n\n  const handleFreshDeskSubmit = async (e) => {\n    e.preventDefault();\n\n    const form = e.target;\n    const subjectValue = form.subject.value;\n    const descriptionValue = form.description.value;\n\n    console.log(messages);\n\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/freshdesk/create-ticket`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email,\n            subject: subjectValue,\n            description: descriptionValue,\n            ticketType,\n            school, // Add this field\n            phoneNumber, // Add this field\n          }),\n        }\n      );\n\n      const responseData = await response.json();\n\n      if (response.ok) {\n        console.log(\"Ticket created successfully:\", responseData);\n        setIsSubmitted(true);\n        setKey((prevKey) => prevKey + 1); // Update the key value\n      } else {\n        console.error(\"Error creating ticket:\", responseData);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {fullScreenImage && (\n        <div\n          className=\"full-screen-image-container\"\n          onClick={closeFullScreenImage}\n        >\n          <img src={fullScreenImage} alt=\"full-screen\" />\n        </div>\n      )}\n      <nav className=\"navbar\">\n        <div className=\"nav-tabs\">\n          <a href=\"/\" className=\"nav-tab\">\n            Home\n          </a>\n        </div>\n        <a href=\"/\" className=\"logo\">\n          <img\n            src=\"https://rollcall.com.au/wp-content/uploads/2018/08/cropped-RollCall-logo-sml-02.png\"\n            alt=\"Your Logo\"\n            style={{ width: \"100px\" }}\n          />\n        </a>\n      </nav>\n      <div className=\"chat-window\">\n        {messages.map((msg, i) => (\n          <div\n            key={i}\n            className={`message-wrapper ${\n              msg.type === \"user\"\n                ? \"user-message-wrapper\"\n                : \"bot-message-wrapper\"\n            }`}\n          >\n            <div\n              className={`${msg.type === \"user\" ? \"user-name\" : \"bot-name\"}`}\n            >\n              {msg.type === \"user\" ? \"John\" : \"RollCall\"}\n            </div>\n            <div\n              ref={botMessageRef}\n              className={`message ${\n                msg.type === \"user\" ? \"user-message\" : \"bot-message\"\n              }`}\n            >\n              {msg.type === \"user\" ? (\n                msg.content\n              ) : msg.isLoading ? (\n                <MessageLoader\n                  width={botMessageSize.width}\n                  height={botMessageSize.height}\n                  botMessageSize={botMessageSize}\n                />\n              ) : (\n                formatBotMessage(msg.content)\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      <SuggestedMessages onSuggestionClick={handleSuggestionClick} />\n\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        <textarea\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          className=\"message-input\"\n          placeholder=\"Type your message...\"\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              handleSubmit(e);\n            }\n          }}\n        ></textarea>\n        <button type=\"submit\" className=\"submit-button\" disabled={loading}>\n          {loading ? <div className=\"loader\"></div> : \"Send\"}\n        </button>\n        {loading && <div className=\"typing-bubble\">RollCall is typing...</div>}\n      </form>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}