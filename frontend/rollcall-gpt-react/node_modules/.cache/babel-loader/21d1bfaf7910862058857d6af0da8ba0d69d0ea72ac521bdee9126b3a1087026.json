{"ast":null,"code":"var _jsxFileName = \"/Users/rollcall/RollCallCode/rollcall-gpt-final/frontend/rollcall-gpt-react/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, Fragment } from \"react\";\nimport { useEffect } from \"react\";\nimport MessageLoader from \"./MessageLoader\"; // Importing MessageLoader component\n\nimport \"./Chat.css\"; // Importing CSS for chat\nimport myImage from \"./rollcallscreen.png\"; // Importing static image\n\nimport SuggestedMessages from \"./SuggestedMessages\"; // Importing SuggestedMessages component\nimport { FaBars, FaTimes } from \"react-icons/fa\"; // Importing icons\nimport SendTicketButton from \"./SendTicketButton\";\n\n// Main Home component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  var _this = this;\n  // These are the states and refs used in the component\n  const botMessageRef = useRef(null);\n  const [wsConnection, setWsConnection] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [socketMessage, setSocketMessage] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBot, setCurrentBot] = useState(\"Clippy\");\n  const [botMessageSize, setBotMessageSize] = useState({\n    width: 400,\n    height: 50\n  });\n  const [email, setEmail] = useState(\"john.doe@rollcall.com.au\");\n  const [subject, setSubject] = useState(\"\");\n  const [school, setSchool] = useState(\"St Johns Grammar\");\n  const [name, setName] = useState(\"John Doe\");\n  const [description, setDescription] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"General Question\");\n  const [phoneNumber, setPhoneNumber] = useState(\"0466987325\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [key, setKey] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Function to toggle menu open or close\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // UseEffect to calculate the size of bot message box\n  useEffect(() => {\n    if (botMessageRef.current) {\n      const rect = botMessageRef.current.getBoundingClientRect();\n      setBotMessageSize({\n        width: rect.width,\n        height: rect.height\n      });\n    }\n  }, [messages]);\n\n  // UseEffect to initialize bot with empty message\n  useEffect(() => {\n    const initiateBot = async () => {\n      const response = await fetch(\"http://localhost:8000\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: \"\",\n          role: \"system\"\n        })\n      });\n      const data = await response.json();\n      setMessages([{\n        type: \"bot\",\n        content: data.message\n      }]);\n    };\n    initiateBot();\n\n    // Clean up function to remove previous conversations\n    return () => {\n      setMessages([]);\n    };\n  }, []);\n\n  // Function to extract bot name from content\n  const extractBotName = content => {\n    const botSwitchPattern = /\\[BOT_SWITCH: (.*?)\\]/;\n    const match = content.match(botSwitchPattern);\n    if (match) {\n      const botName = match[1];\n      const updatedContent = content.replace(botSwitchPattern, `Switching to ${botName}...`);\n      return {\n        botName,\n        updatedContent\n      };\n    }\n    return {\n      botName: null,\n      updatedContent: content\n    };\n  };\n\n  // Function to extract image URL from text\n  function extractImageUrl(text) {\n    const imageUrlPattern1 = /Image\\sURL:\\s(https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?)/i;\n    const imageUrlPattern2 = /https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?/i;\n    let match = text.match(imageUrlPattern1);\n    if (match) {\n      return match[1];\n    }\n    match = text.match(imageUrlPattern2);\n    return match ? match[0] : null;\n  }\n\n  // Function to handle when an image is clicked\n  const handleImageClick = imageUrl => {\n    setFullScreenImage(imageUrl);\n  };\n\n  // Function to close full screen image\n  const closeFullScreenImage = () => {\n    setFullScreenImage(null);\n  };\n\n  // Function to render form for freshdesk\n  const renderForm = (updatedMessages, isSubmitted) => {\n    console.log(updatedMessages);\n    const userMessages = updatedMessages.filter(msg => msg.type === \"user\");\n    let mostRecentUserMessage = \"\";\n    let concatenatedMessages = \"\";\n    if (userMessages.length > 0) {\n      mostRecentUserMessage = userMessages[userMessages.length - 1].content;\n      concatenatedMessages = updatedMessages.map(msg => `${msg.type === \"user\" ? \"User: \" : \"Bot: \"}${msg.content}`).join(\"\\n\");\n    }\n\n    // Add the useEffect hook here\n    setSubject(mostRecentUserMessage);\n    setDescription(concatenatedMessages);\n    console.log(isSubmitted);\n    return !isSubmitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFreshDeskSubmit,\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#1D4A79\",\n          padding: \"16px\",\n          borderRadius: \"8px 8px 0 0\",\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: 0,\n            color: \"white\"\n          },\n          children: \"Submit a Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          padding: \"16px\",\n          borderRadius: \"0 0 8px 8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"school\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"School:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"school\",\n            value: school,\n            onChange: e => setSchool(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"subject\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"subject\",\n            value: subject || mostRecentUserMessage,\n            onChange: e => setSubject(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            value: description || concatenatedMessages,\n            onChange: e => setDescription(e.target.value),\n            required: true,\n            rows: \"5\",\n            style: {\n              width: \"100%\",\n              padding: \"12px 20px\",\n              boxSizing: \"border-box\",\n              border: \"2px solid #ccc\",\n              borderRadius: \"4px\",\n              resize: \"vertical\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              backgroundColor: \"#1D4A79\",\n              color: \"white\",\n              padding: \"15px 20px\",\n              borderRadius: \"8px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n              boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n              transition: \"all 0.3s ease\",\n              width: \"80%\"\n            },\n            onMouseEnter: e => {\n              e.target.style.backgroundColor = \"#16324F\";\n              e.target.style.transform = \"scale(1.05)\";\n            },\n            onMouseLeave: e => {\n              e.target.style.backgroundColor = \"#1D4A79\";\n              e.target.style.transform = \"scale(1)\";\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        padding: \"16px\",\n        borderRadius: \"8px\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for submitting a ticket to our support desk.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"One of our team will be in contact with you shortly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    const connection = new WebSocket(\"ws://localhost:8000/ws/chat/\");\n    connection.onopen = () => {\n      console.log(\"Connected to ws://localhost:8000/ws/chat/\");\n      connection.send(JSON.stringify({\n        message: \"\",\n        role: \"system\"\n      }));\n    };\n    connection.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, {\n        type: \"bot\",\n        content: data.message\n      }]);\n    };\n    setWsConnection(connection);\n    return () => {\n      connection.close();\n      setMessages([]);\n    };\n  }, []);\n\n  // Listen for messages\n  useEffect(() => {\n    if (!socket) return;\n    socket.onmessage = event => {\n      console.log(\"Received:\", event.data);\n      setSocketMessage(event.data);\n    };\n    socket.onclose = event => {\n      console.log(\"WebSocket closed\", event);\n    };\n    socket.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n  }, [socket]);\n  const handleSubmit = async function (e) {\n    let msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (e) {\n      e.preventDefault();\n    }\n    const userMessage = msg || message;\n    setLoading(true);\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      content: userMessage\n    }]);\n    setMessage(\"\");\n\n    // Add a temporary bot message with the loading indicator\n    const temporaryBotMessage = {\n      type: \"bot\",\n      content: /*#__PURE__*/_jsxDEV(MessageLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 16\n      }, _this),\n      isTemporary: true\n    };\n    setMessages(prev => [...prev, temporaryBotMessage]);\n\n    // Use fetch to send a POST request\n    const response = await fetch(\"http://localhost:8000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: userMessage,\n        role: \"user\"\n      })\n    });\n    // const responseData = await response.text();\n\n    // Handle the server's response here. For example, you might add it to the chat history:\n    // setMessages((prev) => [...prev, { type: \"bot\", content: responseData }]);\n  };\n\n  useEffect(() => {\n    if (!wsConnection) return;\n    let tempMessage = null; // Variable to store the temporary message object\n\n    wsConnection.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n\n      // Check if the message indicates the end of the stream\n      let message;\n      try {\n        message = JSON.parse(data.message);\n      } catch (error) {\n        // If parsing throws an error, we assume it's not the stream_end message\n      }\n      if (message && message.stream_end) {\n        const imageUrl = extractImageUrl(tempMessage.content);\n        const botSwitch = extractBotName(tempMessage.content);\n        if (imageUrl) {\n          tempMessage.content = tempMessage.content.replace(imageUrl, \"\").trim();\n          setMessages(prev => [...prev, {\n            type: \"bot\",\n            content: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"RollCall\",\n              onClick: () => handleImageClick(imageUrl),\n              style: {\n                cursor: \"pointer\",\n                maxHeight: \"400px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)\n          }]);\n        }\n        if (botSwitch.botName) {\n          tempMessage.content = botSwitch.updatedContent;\n          setMessages(prev => [...prev, {\n            type: \"bot\",\n            content: renderForm(prev, false)\n          }]);\n        }\n        tempMessage = null; // Reset tempMessage to start fresh for the next message\n        return;\n      }\n      const {\n        botName,\n        updatedContent\n      } = extractBotName(data.message);\n      if (botName) {\n        setCurrentBot(botName);\n      }\n      if (!tempMessage) {\n        // Create a new message object for the first onmessage\n        setLoading(false);\n        setMessages(prev => prev.filter(msg => !msg.isTemporary));\n        tempMessage = {\n          type: \"bot\",\n          content: updatedContent\n        };\n        setMessages(prev => [...prev, tempMessage]);\n      } else {\n        // Concatenate the updatedContent with the existing content in tempMessage\n        tempMessage.content += updatedContent;\n        setMessages(prev => [...prev]); // Trigger re-render\n      }\n\n      setLoading(false);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      wsConnection.close();\n    };\n  }, [wsConnection]);\n  const formatBotMessage = content => {\n    if (typeof content !== \"string\") {\n      return content;\n    }\n    const lines = content.split(\"\\n\");\n    let listItems = [];\n    const elements = [];\n    let isListing = false; // add a flag to determine if we're in a list or not\n\n    lines.forEach((line, index) => {\n      const match = line.match(/^(\\d+)\\.\\s(.*)$/);\n      if (match) {\n        const [,, text] = match;\n        listItems.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: text\n        }, `li-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 24\n        }, this));\n        isListing = true;\n      } else {\n        if (listItems.length > 0 && isListing) {\n          elements.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: listItems\n          }, `ul-${elements.length}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 25\n          }, this));\n          listItems = [];\n        }\n        elements.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: line\n        }, `p-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 23\n        }, this));\n        isListing = false;\n      }\n    });\n    if (listItems.length > 0) {\n      elements.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listItems\n      }, `ul-${elements.length}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 21\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 12\n    }, this);\n  };\n  const handleSuggestionClick = suggestion => {\n    handleSubmit(null, suggestion); // Pass the suggestion as the second argument\n  };\n\n  const handleFreshDeskSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const subjectValue = form.subject.value;\n    const descriptionValue = form.description.value;\n    console.log(messages);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/freshdesk/create-ticket`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          subject: subjectValue,\n          description: descriptionValue,\n          ticketType,\n          school,\n          // Add this field\n          phoneNumber // Add this field\n        })\n      });\n\n      const responseData = await response.json();\n      if (response.ok) {\n        console.log(\"Ticket created successfully:\", responseData);\n        setIsSubmitted(true);\n        setKey(prevKey => prevKey + 1); // Update the key value\n      } else {\n        console.error(\"Error creating ticket:\", responseData);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleSendTicket = () => {\n    setMessages(prev => [...prev, {\n      type: \"bot\",\n      content: renderForm(prev, false)\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-screen\",\n      style: {\n        width: isOpen ? \"67vw\" : \"100vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: myImage,\n        alt: \"RollCallScreen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"2%\",\n          left: isOpen ? \"65%\" : \"97%\"\n        },\n        children: isOpen ? /*#__PURE__*/_jsxDEV(FaTimes, {\n          onClick: toggleMenu,\n          style: {\n            fontSize: \"1.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FaBars, {\n          onClick: toggleMenu,\n          style: {\n            fontSize: \"1.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [fullScreenImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-screen-image-container\",\n        onClick: closeFullScreenImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: fullScreenImage,\n          alt: \"full-screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-tabs\",\n          children: /*#__PURE__*/_jsxDEV(SendTicketButton, {\n            onClick: handleSendTicket\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://rollcall.com.au/wp-content/uploads/2018/08/cropped-RollCall-logo-sml-02.png\",\n            alt: \"Your Logo\",\n            style: {\n              width: \"100px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-wrapper ${msg.type === \"user\" ? \"user-message-wrapper\" : \"bot-message-wrapper\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${msg.type === \"user\" ? \"user-name\" : \"bot-name\"}`,\n            children: msg.type === \"user\" ? \"John\" : \"RollCall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: botMessageRef,\n            className: `message ${msg.type === \"user\" ? \"user-message\" : \"bot-message\"}`,\n            children: msg.type === \"user\" ? msg.content : msg.isLoading ? /*#__PURE__*/_jsxDEV(MessageLoader, {\n              width: botMessageSize.width,\n              height: botMessageSize.height,\n              botMessageSize: botMessageSize\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 19\n            }, this) : formatBotMessage(msg.content)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SuggestedMessages, {\n        onSuggestionClick: handleSuggestionClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          className: \"message-input\",\n          placeholder: \"Type your message...\",\n          onKeyDown: e => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              handleSubmit(e);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 24\n          }, this) : \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-bubble\",\n          children: \"RollCall is typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 573,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"q1XvB9M6t3d9tcLLUcnXmVFiSW8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","Fragment","useEffect","MessageLoader","myImage","SuggestedMessages","FaBars","FaTimes","SendTicketButton","jsxDEV","_jsxDEV","Home","_s","_this","botMessageRef","wsConnection","setWsConnection","socket","setSocket","socketMessage","setSocketMessage","message","setMessage","fullScreenImage","setFullScreenImage","messages","setMessages","loading","setLoading","currentBot","setCurrentBot","botMessageSize","setBotMessageSize","width","height","email","setEmail","subject","setSubject","school","setSchool","name","setName","description","setDescription","ticketType","setTicketType","phoneNumber","setPhoneNumber","isSubmitted","setIsSubmitted","key","setKey","isOpen","setIsOpen","toggleMenu","current","rect","getBoundingClientRect","initiateBot","response","fetch","method","headers","body","JSON","stringify","role","data","json","type","content","extractBotName","botSwitchPattern","match","botName","updatedContent","replace","extractImageUrl","text","imageUrlPattern1","imageUrlPattern2","handleImageClick","imageUrl","closeFullScreenImage","renderForm","updatedMessages","console","log","userMessages","filter","msg","mostRecentUserMessage","concatenatedMessages","length","map","join","onSubmit","handleFreshDeskSubmit","style","children","backgroundColor","padding","borderRadius","textAlign","margin","color","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","display","id","value","onChange","e","target","required","border","rows","boxSizing","resize","justifyContent","alignItems","marginTop","cursor","fontSize","fontWeight","boxShadow","transition","onMouseEnter","transform","onMouseLeave","connection","WebSocket","onopen","send","onmessage","event","parse","prevMessages","close","onclose","onerror","error","handleSubmit","arguments","undefined","preventDefault","userMessage","prev","temporaryBotMessage","isTemporary","tempMessage","stream_end","botSwitch","trim","src","alt","onClick","maxHeight","formatBotMessage","lines","split","listItems","elements","isListing","forEach","line","index","push","handleSuggestionClick","suggestion","form","subjectValue","descriptionValue","process","env","REACT_APP_BACKEND_URL","responseData","ok","prevKey","handleSendTicket","className","position","top","left","href","i","ref","isLoading","onSuggestionClick","placeholder","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["/Users/rollcall/RollCallCode/rollcall-gpt-final/frontend/rollcall-gpt-react/src/Home.js"],"sourcesContent":["import React, { useState, useRef, Fragment } from \"react\";\nimport { useEffect } from \"react\";\nimport MessageLoader from \"./MessageLoader\"; // Importing MessageLoader component\n\nimport \"./Chat.css\"; // Importing CSS for chat\nimport myImage from \"./rollcallscreen.png\"; // Importing static image\n\nimport SuggestedMessages from \"./SuggestedMessages\"; // Importing SuggestedMessages component\nimport { FaBars, FaTimes } from \"react-icons/fa\"; // Importing icons\nimport SendTicketButton from \"./SendTicketButton\";\n\n// Main Home component\nfunction Home() {\n  // These are the states and refs used in the component\n  const botMessageRef = useRef(null);\n  const [wsConnection, setWsConnection] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [socketMessage, setSocketMessage] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBot, setCurrentBot] = useState(\"Clippy\");\n  const [botMessageSize, setBotMessageSize] = useState({\n    width: 400,\n    height: 50,\n  });\n  const [email, setEmail] = useState(\"john.doe@rollcall.com.au\");\n  const [subject, setSubject] = useState(\"\");\n  const [school, setSchool] = useState(\"St Johns Grammar\");\n  const [name, setName] = useState(\"John Doe\");\n  const [description, setDescription] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"General Question\");\n  const [phoneNumber, setPhoneNumber] = useState(\"0466987325\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [key, setKey] = useState(0);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // Function to toggle menu open or close\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // UseEffect to calculate the size of bot message box\n  useEffect(() => {\n    if (botMessageRef.current) {\n      const rect = botMessageRef.current.getBoundingClientRect();\n      setBotMessageSize({ width: rect.width, height: rect.height });\n    }\n  }, [messages]);\n\n  // UseEffect to initialize bot with empty message\n  useEffect(() => {\n    const initiateBot = async () => {\n      const response = await fetch(\"http://localhost:8000\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ message: \"\", role: \"system\" }),\n      });\n\n      const data = await response.json();\n      setMessages([{ type: \"bot\", content: data.message }]);\n    };\n\n    initiateBot();\n\n    // Clean up function to remove previous conversations\n    return () => {\n      setMessages([]);\n    };\n  }, []);\n\n  // Function to extract bot name from content\n  const extractBotName = (content) => {\n    const botSwitchPattern = /\\[BOT_SWITCH: (.*?)\\]/;\n    const match = content.match(botSwitchPattern);\n\n    if (match) {\n      const botName = match[1];\n      const updatedContent = content.replace(\n        botSwitchPattern,\n        `Switching to ${botName}...`\n      );\n      return { botName, updatedContent };\n    }\n\n    return { botName: null, updatedContent: content };\n  };\n\n  // Function to extract image URL from text\n  function extractImageUrl(text) {\n    const imageUrlPattern1 =\n      /Image\\sURL:\\s(https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?)/i;\n    const imageUrlPattern2 =\n      /https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?/i;\n\n    let match = text.match(imageUrlPattern1);\n    if (match) {\n      return match[1];\n    }\n\n    match = text.match(imageUrlPattern2);\n    return match ? match[0] : null;\n  }\n\n  // Function to handle when an image is clicked\n  const handleImageClick = (imageUrl) => {\n    setFullScreenImage(imageUrl);\n  };\n\n  // Function to close full screen image\n  const closeFullScreenImage = () => {\n    setFullScreenImage(null);\n  };\n\n  // Function to render form for freshdesk\n  const renderForm = (updatedMessages, isSubmitted) => {\n    console.log(updatedMessages);\n    const userMessages = updatedMessages.filter((msg) => msg.type === \"user\");\n\n    let mostRecentUserMessage = \"\";\n    let concatenatedMessages = \"\";\n\n    if (userMessages.length > 0) {\n      mostRecentUserMessage = userMessages[userMessages.length - 1].content;\n      concatenatedMessages = updatedMessages\n        .map(\n          (msg) => `${msg.type === \"user\" ? \"User: \" : \"Bot: \"}${msg.content}`\n        )\n        .join(\"\\n\");\n    }\n\n    // Add the useEffect hook here\n    setSubject(mostRecentUserMessage);\n    setDescription(concatenatedMessages);\n\n    console.log(isSubmitted);\n\n    return !isSubmitted ? (\n      <form\n        onSubmit={handleFreshDeskSubmit}\n        key={key}\n        style={{ width: \"100%\" }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#1D4A79\",\n            padding: \"16px\",\n            borderRadius: \"8px 8px 0 0\",\n            textAlign: \"center\",\n          }}\n        >\n          <h2 style={{ margin: 0, color: \"white\" }}>Submit a Ticket</h2>\n        </div>\n        <div\n          style={{\n            backgroundColor: \"white\",\n            padding: \"16px\",\n            borderRadius: \"0 0 8px 8px\",\n          }}\n        >\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"name\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Name:\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"email\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"school\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              School:\n            </label>\n            <input\n              type=\"text\"\n              id=\"school\"\n              value={school}\n              onChange={(e) => setSchool(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"subject\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Subject:\n            </label>\n            <input\n              type=\"text\"\n              id=\"subject\"\n              value={subject || mostRecentUserMessage}\n              onChange={(e) => setSubject(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"description\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Description:\n            </label>\n            <textarea\n              id=\"description\"\n              value={description || concatenatedMessages}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              rows=\"5\"\n              style={{\n                width: \"100%\",\n                padding: \"12px 20px\",\n                boxSizing: \"border-box\",\n                border: \"2px solid #ccc\",\n                borderRadius: \"4px\",\n                resize: \"vertical\",\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginTop: \"20px\",\n            }}\n          >\n            <button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#1D4A79\",\n                color: \"white\",\n                padding: \"15px 20px\",\n                borderRadius: \"8px\",\n                border: \"none\",\n                cursor: \"pointer\",\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n                transition: \"all 0.3s ease\",\n                width: \"80%\",\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.backgroundColor = \"#16324F\";\n                e.target.style.transform = \"scale(1.05)\";\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.backgroundColor = \"#1D4A79\";\n                e.target.style.transform = \"scale(1)\";\n              }}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </form>\n    ) : (\n      <div\n        style={{\n          backgroundColor: \"white\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          textAlign: \"center\",\n        }}\n      >\n        <h2>Thank you for submitting a ticket to our support desk.</h2>\n        <p>One of our team will be in contact with you shortly.</p>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    const connection = new WebSocket(\"ws://localhost:8000/ws/chat/\");\n\n    connection.onopen = () => {\n      console.log(\"Connected to ws://localhost:8000/ws/chat/\");\n      connection.send(JSON.stringify({ message: \"\", role: \"system\" }));\n    };\n\n    connection.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { type: \"bot\", content: data.message },\n      ]);\n    };\n\n    setWsConnection(connection);\n\n    return () => {\n      connection.close();\n      setMessages([]);\n    };\n  }, []);\n\n  // Listen for messages\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.onmessage = (event) => {\n      console.log(\"Received:\", event.data);\n      setSocketMessage(event.data);\n    };\n\n    socket.onclose = (event) => {\n      console.log(\"WebSocket closed\", event);\n    };\n\n    socket.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n    };\n  }, [socket]);\n\n  const handleSubmit = async (e, msg = null) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    const userMessage = msg || message;\n    setLoading(true);\n    setMessages((prev) => [...prev, { type: \"user\", content: userMessage }]);\n    setMessage(\"\");\n\n    // Add a temporary bot message with the loading indicator\n    const temporaryBotMessage = {\n      type: \"bot\",\n      content: <MessageLoader />,\n      isTemporary: true,\n    };\n    setMessages((prev) => [...prev, temporaryBotMessage]);\n\n    // Use fetch to send a POST request\n    const response = await fetch(\"http://localhost:8000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        message: userMessage,\n        role: \"user\",\n      }),\n    });\n    // const responseData = await response.text();\n\n    // Handle the server's response here. For example, you might add it to the chat history:\n    // setMessages((prev) => [...prev, { type: \"bot\", content: responseData }]);\n  };\n  useEffect(() => {\n    if (!wsConnection) return;\n\n    let tempMessage = null; // Variable to store the temporary message object\n\n    wsConnection.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n\n      // Check if the message indicates the end of the stream\n      let message;\n      try {\n        message = JSON.parse(data.message);\n      } catch (error) {\n        // If parsing throws an error, we assume it's not the stream_end message\n      }\n\n      if (message && message.stream_end) {\n        const imageUrl = extractImageUrl(tempMessage.content);\n        const botSwitch = extractBotName(tempMessage.content);\n\n        if (imageUrl) {\n          tempMessage.content = tempMessage.content\n            .replace(imageUrl, \"\")\n            .trim();\n          setMessages((prev) => [\n            ...prev,\n            {\n              type: \"bot\",\n              content: (\n                <img\n                  src={imageUrl}\n                  alt=\"RollCall\"\n                  onClick={() => handleImageClick(imageUrl)}\n                  style={{ cursor: \"pointer\", maxHeight: \"400px\" }}\n                />\n              ),\n            },\n          ]);\n        }\n\n        if (botSwitch.botName) {\n          tempMessage.content = botSwitch.updatedContent;\n          setMessages((prev) => [\n            ...prev,\n            {\n              type: \"bot\",\n              content: renderForm(prev, false),\n            },\n          ]);\n        }\n\n        tempMessage = null; // Reset tempMessage to start fresh for the next message\n        return;\n      }\n\n      const { botName, updatedContent } = extractBotName(data.message);\n\n      if (botName) {\n        setCurrentBot(botName);\n      }\n\n      if (!tempMessage) {\n        // Create a new message object for the first onmessage\n        setLoading(false);\n        setMessages((prev) => prev.filter((msg) => !msg.isTemporary));\n\n        tempMessage = { type: \"bot\", content: updatedContent };\n        setMessages((prev) => [...prev, tempMessage]);\n      } else {\n        // Concatenate the updatedContent with the existing content in tempMessage\n        tempMessage.content += updatedContent;\n        setMessages((prev) => [...prev]); // Trigger re-render\n      }\n\n      setLoading(false);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      wsConnection.close();\n    };\n  }, [wsConnection]);\n\n  const formatBotMessage = (content) => {\n    if (typeof content !== \"string\") {\n      return content;\n    }\n\n    const lines = content.split(\"\\n\");\n    let listItems = [];\n    const elements = [];\n    let isListing = false; // add a flag to determine if we're in a list or not\n\n    lines.forEach((line, index) => {\n      const match = line.match(/^(\\d+)\\.\\s(.*)$/);\n\n      if (match) {\n        const [, , text] = match;\n        listItems.push(<li key={`li-${index}`}>{text}</li>);\n        isListing = true;\n      } else {\n        if (listItems.length > 0 && isListing) {\n          elements.push(<ul key={`ul-${elements.length}`}>{listItems}</ul>);\n          listItems = [];\n        }\n        elements.push(<p key={`p-${index}`}>{line}</p>);\n        isListing = false;\n      }\n    });\n\n    if (listItems.length > 0) {\n      elements.push(<ul key={`ul-${elements.length}`}>{listItems}</ul>);\n    }\n\n    return <div>{elements}</div>;\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    handleSubmit(null, suggestion); // Pass the suggestion as the second argument\n  };\n\n  const handleFreshDeskSubmit = async (e) => {\n    e.preventDefault();\n\n    const form = e.target;\n    const subjectValue = form.subject.value;\n    const descriptionValue = form.description.value;\n\n    console.log(messages);\n\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/freshdesk/create-ticket`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email,\n            subject: subjectValue,\n            description: descriptionValue,\n            ticketType,\n            school, // Add this field\n            phoneNumber, // Add this field\n          }),\n        }\n      );\n\n      const responseData = await response.json();\n\n      if (response.ok) {\n        console.log(\"Ticket created successfully:\", responseData);\n        setIsSubmitted(true);\n        setKey((prevKey) => prevKey + 1); // Update the key value\n      } else {\n        console.error(\"Error creating ticket:\", responseData);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  const handleSendTicket = () => {\n    setMessages((prev) => [\n      ...prev,\n      {\n        type: \"bot\",\n        content: renderForm(prev, false),\n      },\n    ]);\n  };\n\n  return (\n    <div className=\"flex-container\">\n      <div className=\"main-screen\" style={{ width: isOpen ? \"67vw\" : \"100vw\" }}>\n        <img src={myImage} alt=\"RollCallScreen\" />\n\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"2%\",\n            left: isOpen ? \"65%\" : \"97%\",\n          }}\n        >\n          {isOpen ? (\n            <FaTimes onClick={toggleMenu} style={{ fontSize: \"1.5rem\" }} />\n          ) : (\n            <FaBars onClick={toggleMenu} style={{ fontSize: \"1.5rem\" }} />\n          )}\n        </div>\n      </div>\n      <div className=\"chat-container\">\n        {fullScreenImage && (\n          <div\n            className=\"full-screen-image-container\"\n            onClick={closeFullScreenImage}\n          >\n            <img src={fullScreenImage} alt=\"full-screen\" />\n          </div>\n        )}\n        <nav className=\"navbar\">\n          <div className=\"nav-tabs\">\n            <SendTicketButton onClick={handleSendTicket} />\n          </div>\n          <a href=\"/\" className=\"logo\">\n            <img\n              src=\"https://rollcall.com.au/wp-content/uploads/2018/08/cropped-RollCall-logo-sml-02.png\"\n              alt=\"Your Logo\"\n              style={{ width: \"100px\" }}\n            />\n          </a>\n        </nav>\n        <div className=\"chat-window\">\n          {messages.map((msg, i) => (\n            <div\n              key={i}\n              className={`message-wrapper ${\n                msg.type === \"user\"\n                  ? \"user-message-wrapper\"\n                  : \"bot-message-wrapper\"\n              }`}\n            >\n              <div\n                className={`${msg.type === \"user\" ? \"user-name\" : \"bot-name\"}`}\n              >\n                {msg.type === \"user\" ? \"John\" : \"RollCall\"}\n              </div>\n              <div\n                ref={botMessageRef}\n                className={`message ${\n                  msg.type === \"user\" ? \"user-message\" : \"bot-message\"\n                }`}\n              >\n                {msg.type === \"user\" ? (\n                  msg.content\n                ) : msg.isLoading ? (\n                  <MessageLoader\n                    width={botMessageSize.width}\n                    height={botMessageSize.height}\n                    botMessageSize={botMessageSize}\n                  />\n                ) : (\n                  formatBotMessage(msg.content)\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n        <SuggestedMessages onSuggestionClick={handleSuggestionClick} />\n\n        <form onSubmit={handleSubmit} className=\"form-container\">\n          <textarea\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            className=\"message-input\"\n            placeholder=\"Type your message...\"\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                e.preventDefault();\n                handleSubmit(e);\n              }\n            }}\n          ></textarea>\n          <button type=\"submit\" className=\"submit-button\" disabled={loading}>\n            {loading ? <div className=\"loader\"></div> : \"Send\"}\n          </button>\n          {loading && (\n            <div className=\"typing-bubble\">RollCall is typing...</div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}