{"ast":null,"code":"var _jsxFileName = \"/Users/rollcall/RollCallCode/rollcall-gpt-final/frontend/rollcall-gpt-react/src/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport MessageLoader from \"./MessageLoader\";\nimport \"./Chat.css\";\nimport SuggestedMessages from \"./SuggestedMessages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  var _this = this;\n  const botMessageRef = useRef(null);\n  const socketRef = useRef(null);\n  const [wsConnection, setWsConnection] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [response, setResponse] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBot, setCurrentBot] = useState(\"Clippy\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [botMessageSize, setBotMessageSize] = useState({\n    width: 400,\n    height: 50\n  });\n  const [email, setEmail] = useState(\"john.doe@rollcall.com.au\");\n  const [subject, setSubject] = useState(\"\");\n  const [school, setSchool] = useState(\"St Johns Grammar\");\n  const [name, setName] = useState(\"John Doe\");\n  const [description, setDescription] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"General Question\");\n  const [phoneNumber, setPhoneNumber] = useState(\"0466987325\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [key, setKey] = useState(0);\n  useEffect(() => {\n    if (botMessageRef.current) {\n      const rect = botMessageRef.current.getBoundingClientRect();\n      setBotMessageSize({\n        width: rect.width,\n        height: rect.height\n      });\n    }\n  }, [messages]);\n  const getBotApiUrl = botName => {\n    switch (botName) {\n      case \"Clippy\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/navigation`;\n      case \"Steve\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/students`;\n      case \"Pluto\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/plugins`;\n      case \"Otto\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/other`;\n      case \"Rolly\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/routes`;\n      case \"Reposa\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/reports`;\n      case \"Paris\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/settingparentsroute`;\n      case \"Bob\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/bookings`;\n      case \"Dasher\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/dashboard`;\n      case \"Tracy\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/transport`;\n      case \"Smartie\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/smartroute`;\n      default:\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/navigation`;\n    }\n  };\n  const [apiUrl, setApiUrl] = useState(getBotApiUrl(\"Clippy\"));\n  const extractBotName = content => {\n    const botSwitchPattern = /\\[BOT_SWITCH: (.*?)\\]/;\n    const match = content.match(botSwitchPattern);\n    if (match) {\n      const botName = match[1];\n      const updatedContent = content.replace(botSwitchPattern, `Switching to ${botName}...`);\n      return {\n        botName,\n        updatedContent\n      };\n    }\n    return {\n      botName: null,\n      updatedContent: content\n    };\n  };\n  function extractImageUrl(text) {\n    const imageUrlPattern1 = /Image\\sURL:\\s(https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?)/i;\n    const imageUrlPattern2 = /https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?/i;\n    let match = text.match(imageUrlPattern1);\n    if (match) {\n      return match[1];\n    }\n    match = text.match(imageUrlPattern2);\n    return match ? match[0] : null;\n  }\n  const handleImageClick = imageUrl => {\n    setFullScreenImage(imageUrl);\n  };\n  const closeFullScreenImage = () => {\n    setFullScreenImage(null);\n  };\n  const renderForm = (updatedMessages, isSubmitted) => {\n    console.log(updatedMessages);\n    const userMessages = updatedMessages.filter(msg => msg.type === \"user\");\n    let mostRecentUserMessage = \"\";\n    let concatenatedMessages = \"\";\n    if (userMessages.length > 0) {\n      mostRecentUserMessage = userMessages[userMessages.length - 1].content;\n      concatenatedMessages = updatedMessages.map(msg => `${msg.type === \"user\" ? \"User: \" : \"Bot: \"}${msg.content}`).join(\"\\n\");\n    }\n\n    // Add the useEffect hook here\n    setSubject(mostRecentUserMessage);\n    setDescription(concatenatedMessages);\n    console.log(isSubmitted);\n    return !isSubmitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFreshDeskSubmit,\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"#1D4A79\",\n          padding: \"16px\",\n          borderRadius: \"8px 8px 0 0\",\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: 0,\n            color: \"white\"\n          },\n          children: \"Submit a Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          padding: \"16px\",\n          borderRadius: \"0 0 8px 8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"school\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"School:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"school\",\n            value: school,\n            onChange: e => setSchool(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"subject\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Subject:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"subject\",\n            value: subject || mostRecentUserMessage,\n            onChange: e => setSubject(e.target.value),\n            required: true,\n            style: {\n              width: \"98%\",\n              padding: \"8px\",\n              borderRadius: \"4px\",\n              border: \"1px solid #E5E7EB\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: \"12px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            style: {\n              display: \"block\",\n              marginBottom: \"4px\"\n            },\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            value: description || concatenatedMessages,\n            onChange: e => setDescription(e.target.value),\n            required: true,\n            rows: \"5\",\n            style: {\n              width: \"100%\",\n              padding: \"12px 20px\",\n              boxSizing: \"border-box\",\n              border: \"2px solid #ccc\",\n              borderRadius: \"4px\",\n              resize: \"vertical\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              backgroundColor: \"#1D4A79\",\n              color: \"white\",\n              padding: \"15px 20px\",\n              borderRadius: \"8px\",\n              border: \"none\",\n              cursor: \"pointer\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n              boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n              transition: \"all 0.3s ease\",\n              width: \"80%\"\n            },\n            onMouseEnter: e => {\n              e.target.style.backgroundColor = \"#16324F\";\n              e.target.style.transform = \"scale(1.05)\";\n            },\n            onMouseLeave: e => {\n              e.target.style.backgroundColor = \"#1D4A79\";\n              e.target.style.transform = \"scale(1)\";\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        padding: \"16px\",\n        borderRadius: \"8px\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Thank you for submitting a ticket to our support desk.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"One of our team will be in contact with you shortly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this);\n  };\n  const [socket, setSocket] = useState(null);\n  const [socketMessage, setSocketMessage] = useState(null);\n  useEffect(() => {\n    const connection = new WebSocket(\"ws://localhost:8000/ws/chat/\");\n    connection.onopen = () => {\n      console.log(\"Connected to ws://localhost:8000/ws/chat/\");\n      connection.send(JSON.stringify({\n        message: \"\",\n        role: \"system\"\n      }));\n    };\n    connection.onmessage = event => {\n      const data = JSON.parse(event.data);\n      setMessages(prevMessages => [...prevMessages, {\n        type: \"bot\",\n        content: data.message\n      }]);\n    };\n    setWsConnection(connection);\n    return () => {\n      connection.close();\n      setMessages([]);\n    };\n  }, []);\n\n  // Listen for messages\n  useEffect(() => {\n    if (!socket) return;\n    socket.onmessage = event => {\n      console.log(\"Received:\", event.data);\n      setSocketMessage(event.data);\n    };\n    socket.onclose = event => {\n      console.log(\"WebSocket closed\", event);\n    };\n    socket.onerror = error => {\n      console.error(\"WebSocket error:\", error);\n    };\n  }, [socket]);\n  const handleSubmit = async function (e) {\n    let msg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (e) {\n      e.preventDefault();\n    }\n    const userMessage = msg || message;\n    setLoading(true);\n    setMessages(prev => [...prev, {\n      type: \"user\",\n      content: userMessage\n    }]);\n    setMessage(\"\");\n\n    // Add a temporary bot message with the loading indicator\n    const temporaryBotMessage = {\n      type: \"bot\",\n      content: /*#__PURE__*/_jsxDEV(MessageLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 16\n      }, _this),\n      isTemporary: true\n    };\n    setMessages(prev => [...prev, temporaryBotMessage]);\n\n    // Use fetch to send a POST request\n    const response = await fetch(\"http://localhost:8000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: userMessage,\n        role: \"user\"\n      })\n    });\n    // const responseData = await response.text();\n\n    // Handle the server's response here. For example, you might add it to the chat history:\n    // setMessages((prev) => [...prev, { type: \"bot\", content: responseData }]);\n  };\n\n  useEffect(() => {\n    if (!wsConnection) return;\n    let tempMessage = null; // Variable to store the temporary message object\n\n    wsConnection.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n      const {\n        botName,\n        updatedContent\n      } = extractBotName(data.message);\n      console.log(data);\n      if (botName) {\n        setCurrentBot(botName);\n      }\n      if (!tempMessage) {\n        // Create a new message object for the first onmessage\n        setLoading(false);\n        setMessages(prev => prev.filter(msg => !msg.isTemporary));\n        tempMessage = {\n          type: \"bot\",\n          content: updatedContent\n        };\n        setMessages(prev => [...prev, tempMessage]);\n      } else {\n        // Concatenate the updatedContent with the existing content in tempMessage\n        tempMessage.content += updatedContent;\n        setMessages(prev => [...prev]); // Trigger re-render\n      }\n\n      setLoading(false);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      wsConnection.close();\n    };\n  }, [wsConnection]);\n  const formatBotMessage = content => {\n    if (typeof content !== \"string\") {\n      return content;\n    }\n    const lines = content.split(\"\\n\");\n    let listItems = [];\n    const elements = [];\n    let isListing = false; // add a flag to determine if we're in a list or not\n\n    lines.forEach((line, index) => {\n      const match = line.match(/^(\\d+)\\.\\s(.*)$/);\n      if (match) {\n        const [,, text] = match;\n        listItems.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: text\n        }, `li-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 24\n        }, this));\n        isListing = true;\n      } else {\n        if (listItems.length > 0 && isListing) {\n          elements.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: listItems\n          }, `ul-${elements.length}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 25\n          }, this));\n          listItems = [];\n        }\n        elements.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: line\n        }, `p-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 23\n        }, this));\n        isListing = false;\n      }\n    });\n    if (listItems.length > 0) {\n      elements.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: listItems\n      }, `ul-${elements.length}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 12\n    }, this);\n  };\n  const handleSuggestionClick = suggestion => {\n    handleSubmit(null, suggestion); // Pass the suggestion as the second argument\n  };\n\n  const handleFreshDeskSubmit = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const subjectValue = form.subject.value;\n    const descriptionValue = form.description.value;\n    console.log(messages);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/freshdesk/create-ticket`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          subject: subjectValue,\n          description: descriptionValue,\n          ticketType,\n          school,\n          // Add this field\n          phoneNumber // Add this field\n        })\n      });\n\n      const responseData = await response.json();\n      if (response.ok) {\n        console.log(\"Ticket created successfully:\", responseData);\n        setIsSubmitted(true);\n        setKey(prevKey => prevKey + 1); // Update the key value\n      } else {\n        console.error(\"Error creating ticket:\", responseData);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [fullScreenImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-screen-image-container\",\n      onClick: closeFullScreenImage,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: fullScreenImage,\n        alt: \"full-screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-tabs\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"nav-tab\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://rollcall.com.au/wp-content/uploads/2018/08/cropped-RollCall-logo-sml-02.png\",\n          alt: \"Your Logo\",\n          style: {\n            width: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-wrapper ${msg.type === \"user\" ? \"user-message-wrapper\" : \"bot-message-wrapper\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${msg.type === \"user\" ? \"user-name\" : \"bot-name\"}`,\n          children: msg.type === \"user\" ? \"John\" : \"RollCall\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: botMessageRef,\n          className: `message ${msg.type === \"user\" ? \"user-message\" : \"bot-message\"}`,\n          children: msg.type === \"user\" ? msg.content : msg.isLoading ? /*#__PURE__*/_jsxDEV(MessageLoader, {\n            width: botMessageSize.width,\n            height: botMessageSize.height,\n            botMessageSize: botMessageSize\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 17\n          }, this) : formatBotMessage(msg.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuggestedMessages, {\n      onSuggestionClick: handleSuggestionClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        className: \"message-input\",\n        placeholder: \"Type your message...\",\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            handleSubmit(e);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 22\n        }, this) : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-bubble\",\n        children: \"RollCall is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 509,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"u/qnZz7SzTrQyQuBDRUqQVT2XZE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MessageLoader","SuggestedMessages","jsxDEV","_jsxDEV","Home","_s","_this","botMessageRef","socketRef","wsConnection","setWsConnection","message","setMessage","fullScreenImage","setFullScreenImage","response","setResponse","messages","setMessages","loading","setLoading","currentBot","setCurrentBot","isTyping","setIsTyping","botMessageSize","setBotMessageSize","width","height","email","setEmail","subject","setSubject","school","setSchool","name","setName","description","setDescription","ticketType","setTicketType","phoneNumber","setPhoneNumber","isSubmitted","setIsSubmitted","key","setKey","current","rect","getBoundingClientRect","getBotApiUrl","botName","process","env","REACT_APP_BACKEND_URL","apiUrl","setApiUrl","extractBotName","content","botSwitchPattern","match","updatedContent","replace","extractImageUrl","text","imageUrlPattern1","imageUrlPattern2","handleImageClick","imageUrl","closeFullScreenImage","renderForm","updatedMessages","console","log","userMessages","filter","msg","type","mostRecentUserMessage","concatenatedMessages","length","map","join","onSubmit","handleFreshDeskSubmit","style","children","backgroundColor","padding","borderRadius","textAlign","margin","color","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","display","id","value","onChange","e","target","required","border","rows","boxSizing","resize","justifyContent","alignItems","marginTop","cursor","fontSize","fontWeight","boxShadow","transition","onMouseEnter","transform","onMouseLeave","socket","setSocket","socketMessage","setSocketMessage","connection","WebSocket","onopen","send","JSON","stringify","role","onmessage","event","data","parse","prevMessages","close","onclose","onerror","error","handleSubmit","arguments","undefined","preventDefault","userMessage","prev","temporaryBotMessage","isTemporary","fetch","method","headers","body","tempMessage","formatBotMessage","lines","split","listItems","elements","isListing","forEach","line","index","push","handleSuggestionClick","suggestion","form","subjectValue","descriptionValue","responseData","json","ok","prevKey","className","onClick","src","alt","href","i","ref","isLoading","onSuggestionClick","placeholder","onKeyDown","disabled","_c","$RefreshReg$"],"sources":["/Users/rollcall/RollCallCode/rollcall-gpt-final/frontend/rollcall-gpt-react/src/Home.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport MessageLoader from \"./MessageLoader\";\n\nimport \"./Chat.css\";\nimport SuggestedMessages from \"./SuggestedMessages\";\n\nfunction Home() {\n  const botMessageRef = useRef(null);\n  const socketRef = useRef(null);\n  const [wsConnection, setWsConnection] = useState(null);\n\n  const [message, setMessage] = useState(\"\");\n  const [fullScreenImage, setFullScreenImage] = useState(null);\n  const [response, setResponse] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentBot, setCurrentBot] = useState(\"Clippy\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [botMessageSize, setBotMessageSize] = useState({\n    width: 400,\n    height: 50,\n  });\n  const [email, setEmail] = useState(\"john.doe@rollcall.com.au\");\n  const [subject, setSubject] = useState(\"\");\n  const [school, setSchool] = useState(\"St Johns Grammar\");\n  const [name, setName] = useState(\"John Doe\");\n  const [description, setDescription] = useState(\"\");\n  const [ticketType, setTicketType] = useState(\"General Question\");\n  const [phoneNumber, setPhoneNumber] = useState(\"0466987325\");\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [key, setKey] = useState(0);\n\n  useEffect(() => {\n    if (botMessageRef.current) {\n      const rect = botMessageRef.current.getBoundingClientRect();\n      setBotMessageSize({ width: rect.width, height: rect.height });\n    }\n  }, [messages]);\n\n  const getBotApiUrl = (botName) => {\n    switch (botName) {\n      case \"Clippy\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/navigation`;\n      case \"Steve\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/students`;\n      case \"Pluto\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/plugins`;\n      case \"Otto\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/other`;\n      case \"Rolly\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/routes`;\n      case \"Reposa\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/reports`;\n      case \"Paris\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/settingparentsroute`;\n      case \"Bob\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/bookings`;\n      case \"Dasher\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/dashboard`;\n      case \"Tracy\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/transport`;\n      case \"Smartie\":\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/smartroute`;\n      default:\n        return `${process.env.REACT_APP_BACKEND_URL}/webapp/navigation`;\n    }\n  };\n  const [apiUrl, setApiUrl] = useState(getBotApiUrl(\"Clippy\"));\n\n  const extractBotName = (content) => {\n    const botSwitchPattern = /\\[BOT_SWITCH: (.*?)\\]/;\n    const match = content.match(botSwitchPattern);\n\n    if (match) {\n      const botName = match[1];\n      const updatedContent = content.replace(\n        botSwitchPattern,\n        `Switching to ${botName}...`\n      );\n      return { botName, updatedContent };\n    }\n\n    return { botName: null, updatedContent: content };\n  };\n\n  function extractImageUrl(text) {\n    const imageUrlPattern1 =\n      /Image\\sURL:\\s(https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?)/i;\n    const imageUrlPattern2 =\n      /https?:\\/\\/(?:[a-zA-Z0-9\\-_.]+\\/)+[\\w\\-]+\\.+(?:jpe?g|gif|png|webp)(?:\\?.*)?/i;\n\n    let match = text.match(imageUrlPattern1);\n    if (match) {\n      return match[1];\n    }\n\n    match = text.match(imageUrlPattern2);\n    return match ? match[0] : null;\n  }\n\n  const handleImageClick = (imageUrl) => {\n    setFullScreenImage(imageUrl);\n  };\n\n  const closeFullScreenImage = () => {\n    setFullScreenImage(null);\n  };\n\n  const renderForm = (updatedMessages, isSubmitted) => {\n    console.log(updatedMessages);\n    const userMessages = updatedMessages.filter((msg) => msg.type === \"user\");\n\n    let mostRecentUserMessage = \"\";\n    let concatenatedMessages = \"\";\n\n    if (userMessages.length > 0) {\n      mostRecentUserMessage = userMessages[userMessages.length - 1].content;\n      concatenatedMessages = updatedMessages\n        .map(\n          (msg) => `${msg.type === \"user\" ? \"User: \" : \"Bot: \"}${msg.content}`\n        )\n        .join(\"\\n\");\n    }\n\n    // Add the useEffect hook here\n    setSubject(mostRecentUserMessage);\n    setDescription(concatenatedMessages);\n\n    console.log(isSubmitted);\n\n    return !isSubmitted ? (\n      <form\n        onSubmit={handleFreshDeskSubmit}\n        key={key}\n        style={{ width: \"100%\" }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#1D4A79\",\n            padding: \"16px\",\n            borderRadius: \"8px 8px 0 0\",\n            textAlign: \"center\",\n          }}\n        >\n          <h2 style={{ margin: 0, color: \"white\" }}>Submit a Ticket</h2>\n        </div>\n        <div\n          style={{\n            backgroundColor: \"white\",\n            padding: \"16px\",\n            borderRadius: \"0 0 8px 8px\",\n          }}\n        >\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"name\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Name:\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"email\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"school\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              School:\n            </label>\n            <input\n              type=\"text\"\n              id=\"school\"\n              value={school}\n              onChange={(e) => setSchool(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"subject\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Subject:\n            </label>\n            <input\n              type=\"text\"\n              id=\"subject\"\n              value={subject || mostRecentUserMessage}\n              onChange={(e) => setSubject(e.target.value)}\n              required\n              style={{\n                width: \"98%\",\n                padding: \"8px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #E5E7EB\",\n              }}\n            />\n          </div>\n          <div style={{ marginBottom: \"12px\" }}>\n            <label\n              htmlFor=\"description\"\n              style={{ display: \"block\", marginBottom: \"4px\" }}\n            >\n              Description:\n            </label>\n            <textarea\n              id=\"description\"\n              value={description || concatenatedMessages}\n              onChange={(e) => setDescription(e.target.value)}\n              required\n              rows=\"5\"\n              style={{\n                width: \"100%\",\n                padding: \"12px 20px\",\n                boxSizing: \"border-box\",\n                border: \"2px solid #ccc\",\n                borderRadius: \"4px\",\n                resize: \"vertical\",\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              marginTop: \"20px\",\n            }}\n          >\n            <button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#1D4A79\",\n                color: \"white\",\n                padding: \"15px 20px\",\n                borderRadius: \"8px\",\n                border: \"none\",\n                cursor: \"pointer\",\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\n                transition: \"all 0.3s ease\",\n                width: \"80%\",\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.backgroundColor = \"#16324F\";\n                e.target.style.transform = \"scale(1.05)\";\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.backgroundColor = \"#1D4A79\";\n                e.target.style.transform = \"scale(1)\";\n              }}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </form>\n    ) : (\n      <div\n        style={{\n          backgroundColor: \"white\",\n          padding: \"16px\",\n          borderRadius: \"8px\",\n          textAlign: \"center\",\n        }}\n      >\n        <h2>Thank you for submitting a ticket to our support desk.</h2>\n        <p>One of our team will be in contact with you shortly.</p>\n      </div>\n    );\n  };\n\n  const [socket, setSocket] = useState(null);\n  const [socketMessage, setSocketMessage] = useState(null);\n\n  useEffect(() => {\n    const connection = new WebSocket(\"ws://localhost:8000/ws/chat/\");\n\n    connection.onopen = () => {\n      console.log(\"Connected to ws://localhost:8000/ws/chat/\");\n      connection.send(JSON.stringify({ message: \"\", role: \"system\" }));\n    };\n\n    connection.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { type: \"bot\", content: data.message },\n      ]);\n    };\n\n    setWsConnection(connection);\n\n    return () => {\n      connection.close();\n      setMessages([]);\n    };\n  }, []);\n\n  // Listen for messages\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.onmessage = (event) => {\n      console.log(\"Received:\", event.data);\n      setSocketMessage(event.data);\n    };\n\n    socket.onclose = (event) => {\n      console.log(\"WebSocket closed\", event);\n    };\n\n    socket.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n    };\n  }, [socket]);\n\n  const handleSubmit = async (e, msg = null) => {\n    if (e) {\n      e.preventDefault();\n    }\n\n    const userMessage = msg || message;\n    setLoading(true);\n    setMessages((prev) => [...prev, { type: \"user\", content: userMessage }]);\n    setMessage(\"\");\n\n    // Add a temporary bot message with the loading indicator\n    const temporaryBotMessage = {\n      type: \"bot\",\n      content: <MessageLoader />,\n      isTemporary: true,\n    };\n    setMessages((prev) => [...prev, temporaryBotMessage]);\n\n    // Use fetch to send a POST request\n    const response = await fetch(\"http://localhost:8000\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        message: userMessage,\n        role: \"user\",\n      }),\n    });\n    // const responseData = await response.text();\n\n    // Handle the server's response here. For example, you might add it to the chat history:\n    // setMessages((prev) => [...prev, { type: \"bot\", content: responseData }]);\n  };\n  useEffect(() => {\n    if (!wsConnection) return;\n\n    let tempMessage = null; // Variable to store the temporary message object\n\n    wsConnection.onmessage = function (e) {\n      const data = JSON.parse(e.data);\n      const { botName, updatedContent } = extractBotName(data.message);\n      console.log(data);\n      if (botName) {\n        setCurrentBot(botName);\n      }\n\n      if (!tempMessage) {\n        // Create a new message object for the first onmessage\n        setLoading(false);\n        setMessages((prev) => prev.filter((msg) => !msg.isTemporary));\n\n        tempMessage = { type: \"bot\", content: updatedContent };\n        setMessages((prev) => [...prev, tempMessage]);\n      } else {\n        // Concatenate the updatedContent with the existing content in tempMessage\n        tempMessage.content += updatedContent;\n        setMessages((prev) => [...prev]); // Trigger re-render\n      }\n\n      setLoading(false);\n    };\n\n    // Clean up the WebSocket connection when the component unmounts\n    return () => {\n      wsConnection.close();\n    };\n  }, [wsConnection]);\n\n  const formatBotMessage = (content) => {\n    if (typeof content !== \"string\") {\n      return content;\n    }\n\n    const lines = content.split(\"\\n\");\n    let listItems = [];\n    const elements = [];\n    let isListing = false; // add a flag to determine if we're in a list or not\n\n    lines.forEach((line, index) => {\n      const match = line.match(/^(\\d+)\\.\\s(.*)$/);\n\n      if (match) {\n        const [, , text] = match;\n        listItems.push(<li key={`li-${index}`}>{text}</li>);\n        isListing = true;\n      } else {\n        if (listItems.length > 0 && isListing) {\n          elements.push(<ul key={`ul-${elements.length}`}>{listItems}</ul>);\n          listItems = [];\n        }\n        elements.push(<p key={`p-${index}`}>{line}</p>);\n        isListing = false;\n      }\n    });\n\n    if (listItems.length > 0) {\n      elements.push(<ul key={`ul-${elements.length}`}>{listItems}</ul>);\n    }\n\n    return <div>{elements}</div>;\n  };\n\n  const handleSuggestionClick = (suggestion) => {\n    handleSubmit(null, suggestion); // Pass the suggestion as the second argument\n  };\n\n  const handleFreshDeskSubmit = async (e) => {\n    e.preventDefault();\n\n    const form = e.target;\n    const subjectValue = form.subject.value;\n    const descriptionValue = form.description.value;\n\n    console.log(messages);\n\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/freshdesk/create-ticket`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            email,\n            subject: subjectValue,\n            description: descriptionValue,\n            ticketType,\n            school, // Add this field\n            phoneNumber, // Add this field\n          }),\n        }\n      );\n\n      const responseData = await response.json();\n\n      if (response.ok) {\n        console.log(\"Ticket created successfully:\", responseData);\n        setIsSubmitted(true);\n        setKey((prevKey) => prevKey + 1); // Update the key value\n      } else {\n        console.error(\"Error creating ticket:\", responseData);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {fullScreenImage && (\n        <div\n          className=\"full-screen-image-container\"\n          onClick={closeFullScreenImage}\n        >\n          <img src={fullScreenImage} alt=\"full-screen\" />\n        </div>\n      )}\n      <nav className=\"navbar\">\n        <div className=\"nav-tabs\">\n          <a href=\"/\" className=\"nav-tab\">\n            Home\n          </a>\n        </div>\n        <a href=\"/\" className=\"logo\">\n          <img\n            src=\"https://rollcall.com.au/wp-content/uploads/2018/08/cropped-RollCall-logo-sml-02.png\"\n            alt=\"Your Logo\"\n            style={{ width: \"100px\" }}\n          />\n        </a>\n      </nav>\n      <div className=\"chat-window\">\n        {messages.map((msg, i) => (\n          <div\n            key={i}\n            className={`message-wrapper ${\n              msg.type === \"user\"\n                ? \"user-message-wrapper\"\n                : \"bot-message-wrapper\"\n            }`}\n          >\n            <div\n              className={`${msg.type === \"user\" ? \"user-name\" : \"bot-name\"}`}\n            >\n              {msg.type === \"user\" ? \"John\" : \"RollCall\"}\n            </div>\n            <div\n              ref={botMessageRef}\n              className={`message ${\n                msg.type === \"user\" ? \"user-message\" : \"bot-message\"\n              }`}\n            >\n              {msg.type === \"user\" ? (\n                msg.content\n              ) : msg.isLoading ? (\n                <MessageLoader\n                  width={botMessageSize.width}\n                  height={botMessageSize.height}\n                  botMessageSize={botMessageSize}\n                />\n              ) : (\n                formatBotMessage(msg.content)\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      <SuggestedMessages onSuggestionClick={handleSuggestionClick} />\n\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        <textarea\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          className=\"message-input\"\n          placeholder=\"Type your message...\"\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              handleSubmit(e);\n            }\n          }}\n        ></textarea>\n        <button type=\"submit\" className=\"submit-button\" disabled={loading}>\n          {loading ? <div className=\"loader\"></div> : \"Send\"}\n        </button>\n        {loading && <div className=\"typing-bubble\">RollCall is typing...</div>}\n      </form>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}